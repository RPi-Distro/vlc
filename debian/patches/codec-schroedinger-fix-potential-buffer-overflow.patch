From: Fabian Yamaguchi <fyamagu@gwdg.de>
Subject: [PATCH] codec: schroedinger: fix potential buffer overflow.
 The variable len is a raw 32 bit value read using GetDWBE. If this
 value is larger than UINT32_MAX - sizeof(eos), this will cause an
 integer overflow in the subsequent call to malloc, and finally a
 buffer overflow when calling memcpy. We fix this by checking len
 accordingly.
Origin: upstream, http://git.videolan.org/?p=vlc.git;a=commitdiff;h=9bb0353a5c63a7f8c6fc853faa3df4b4df1f5eb5
Bug-Debian: https://bugs.debian.org/775866
Last-Update: 2015-01-21

--- a/modules/codec/schroedinger.c
+++ b/modules/codec/schroedinger.c
@@ -1548,6 +1548,10 @@
                      * is appended to the sequence header to allow guard
                      * against poor streaming servers */
                     /* XXX, should this be done using the packetizer ? */
+
+                    if( len > UINT32_MAX - sizeof( eos ) )
+                        return NULL;
+
                     p_enc->fmt_out.p_extra = malloc( len + sizeof( eos ) );
                     if( !p_enc->fmt_out.p_extra )
                         return NULL;
