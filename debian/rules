#!/usr/bin/make -f

#DH_VERBOSE=1

DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_ARCH      ?= $(shell dpkg-architecture -qDEB_BUILD_ARCH)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_ARCH_OS    ?= $(shell dpkg-architecture -qDEB_HOST_ARCH_OS)
VERSION = $(shell  dpkg-parsechangelog|sed -n 's/^Version: //p')
DEBIAN_VERSION = $(shell echo $(VERSION)|sed -nr 's/[^:]+://; s/.*-([^-]+$$)/\1/p')

ifeq ($(DEB_BUILD_GNU_TYPE),$(DEB_HOST_GNU_TYPE))
confflags := --build=$(DEB_BUILD_GNU_TYPE)
else
confflags := --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE)
endif

ifneq (,$(filter noopt,$(DEB_BUILD_OPTIONS)))
confflags += --disable-optimizations
endif
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
MAKEFLAGS += -j$(NUMJOBS)
endif



include /usr/share/quilt/quilt.make

LDFLAGS = -Wl,--as-needed

# configure flags
confflags += --enable-maintaner-mode --enable-release --prefix=/usr
confflags += \
	--enable-libtool \
	--enable-fast-install \
	--with-binary-version=$(DEBIAN_VERSION) \
	--disable-update-check \
	--disable-gnome \
	--disable-gtk \
	--disable-familiar \
	--disable-fb \
	--enable-ggi \
	--enable-sdl \
	--enable-esd \
	--enable-mad \
	--enable-arts \
	--enable-alsa \
	--enable-jack \
        --enable-pulse \
        --enable-lirc \
	--enable-a52 \
	--enable-aa \
	--enable-dvbpsi \
	--enable-mozilla \
	--with-mozilla-pkg=libxul-plugin \
	--disable-kde \
	--enable-mp4 \
	--enable-dvb \
	--disable-satellite \
	--enable-ogg \
	--enable-vorbis \
	--enable-shout \
	--enable-qt4 \
	--disable-slp \
	--enable-flac \
	--disable-skins \
	--disable-basic-skins \
	--enable-skins2 \
	--enable-freetype \
	--enable-mkv \
	--enable-speex \
	--enable-caca \
	--enable-live555 \
	--enable-libmpeg2 \
	--enable-fribidi \
	--enable-cdio \
	--enable-mod \
	--enable-theora \
	--enable-modplug \
	--enable-dvdnav \
	--enable-gnutls \
	--enable-ffmpeg \
	--enable-ncurses \
	--enable-smb \
	--disable-gnomevfs \
	--enable-bonjour \
	--enable-mpc \
	--enable-vcd \
	--enable-vcdx \
	--enable-notify \
	--enable-twolame \
	--enable-faad \
	--disable-zvbi \
	--enable-telx \
	--enable-mediacontrol-bindings \
	--disable-atmo \
	--enable-taglib \
	--enable-libass \
	--enable-libdca \
	--enable-realrtsp \
	--enable-x264 \
	$(NULL)

#	--enable-dts \

# Linux specific flags
ifeq ($(DEB_HOST_ARCH_OS),linux)
confflags += --enable-alsa --enable-dv --enable-v4l --enable-v4l2 --enable-pvr
endif

# svgalib is only for x86 and x86-64 on Linux
ifneq ($(filter $(DEB_BUILD_ARCH), amd64 i386),)
confflags += --enable-svgalib
endif

# Remove --without-dvdcss in non-totalitarian countries
confflags += --enable-dvd --without-dvdcss

# A few shortcuts
VIDDIR := usr/share/vlc
PIXDIR := usr/share/pixmaps

build: build-stamp
build-stamp: $(QUILT_STAMPFN)
	dh_testdir
	./configure --enable-static $(confflags)
	$(MAKE) -C src libvlccore.la libvlc.la
	mkdir -p tmp
	cp src/.libs/libvlccore.a tmp/libvlccore.a
	cp src/.libs/libvlc.a tmp/libvlc.a
	./configure $(confflags)
	$(MAKE)
ifeq ($(filter nocheck,$(DEB_BUILD_OPTIONS)),)
ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
	# Check which plugins were built and whether they load properly.
	./vlc -vvv --reset-plugins-cache --list --no-color  
endif
endif
	touch $@

clean: clean-real unpatch
clean-real:
	dh_testdir
	dh_testroot
	rm -f build-stamp
	# Clean VLC
	[ ! -f Makefile ] || $(MAKE) distclean
	rm -rf tmp/
	# Clean zsh completion stuff
	rm -f extras/zsh
	# Removed ugly cruft
	rm -f src/misc/modules_builtin.h
	rm -f mozilla/vlcintf.xpt mozilla/vlcintf.h
	# Remove spurious autotools stuff
	rm -f config.log confdefs.h
	# Unpatch package
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_prep
	sed -e '/lib\(alsa\|dvb\|v4l\|pvr\)_/d' debian/vlc-nox.install \
	 >debian/vlc-nox.install.kfreebsd-i386
	cp debian/vlc-nox.install.kfreebsd-i386 \
	 debian/vlc-nox.install.kfreebsd-amd64
	dh_installdirs
	$(MAKE) install DESTDIR=$(CURDIR)/debian/tmp/
	cp tmp/libvlc.a debian/tmp/usr/lib
	cp tmp/libvlccore.a debian/tmp/usr/lib
	# Clean up libtool crap
	find debian/tmp -name '*.la' -exec rm '{}' ';'
	# Remove useless stuff
	rm -f debian/tmp/usr/share/vlc/skins2/fonts/FreeSans.ttf
	rm -f debian/tmp/usr/share/vlc/skins2/fonts/FreeSansBold.ttf
	ln -s /usr/share/fonts/truetype/ttf-dejavu/DejaVuSans.ttf debian/tmp/usr/share/vlc/skins2/fonts/FreeSans.ttf
	ln -s /usr/share/fonts/truetype/ttf-dejavu/DejaVuSans-Bold.ttf debian/tmp/usr/share/vlc/skins2/fonts/FreeSansBold.ttf
	# Move stuff around
	mkdir -p debian/tmp/$(PIXDIR)
	mv debian/tmp/$(VIDDIR)/vlc48x48.png debian/tmp/$(PIXDIR)/vlc.png
	mv debian/tmp/$(VIDDIR)/vlc32x32.xpm debian/tmp/$(VIDDIR)/vlc.xpm
	# Install stuff
	dh_install -si --fail-missing --sourcedir=debian/tmp
	#install BTS stuff
	mkdir -p  debian/vlc-nox/usr/share/bug/vlc-nox
	cp debian/bug/* debian/vlc-nox/usr/share/bug/vlc-nox
	# Clean up
	rm -f debian/vlc/$(VIDDIR)/*.png
ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
	# Check that we did not install a plugin linked with libX11 in vlc-nox
	BORKED=no; \
	for file in $$(find debian/vlc-nox/usr/lib/vlc -name '*.so'); do \
	  if objdump -x $$file | egrep -q '^ +NEEDED +libX11\.so'; then \
	    BORKED=yes; \
	    echo $$file depends on libX11; \
	  fi; \
	done; \
	if test "$$BORKED" = yes; then exit 1; fi
endif

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir
	dh_testroot
	dh_link -i
	dh_installdocs -p vlc-data 
	dh_installchangelogs ChangeLog -p vlc-data
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installdocs -p vlc
	dh_installdocs -p vlc-nox
	dh_link -s
	dh_buildinfo -p vlc-nox
	dh_installmenu -s
	dh_installmime -s
	dh_installman doc/vlc.1 -p vlc-nox
	dh_installman debian/vlc-wrapper.1 -p vlc-nox
	dh_installchangelogs ChangeLog -p vlc
	dh_installchangelogs ChangeLog -p vlc-nox
	dh_desktop
	dh_strip -s --dbg-package=vlc-dbg
	dh_compress -s
	dh_fixperms -s
	dh_makeshlibs -plibvlc2 -V # -V is nasty, but I mean it
	dh_makeshlibs -plibvlccore0 -V # -V is nasty, but I mean it
	dh_installdeb -s
	dh_shlibdeps -s -ldebian/libvlc2/usr/lib:debian/libvlccore0/usr/lib 
	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s

binary: binary-indep binary-arch
.PHONY: build clean install binary-indep binary-arch binary
