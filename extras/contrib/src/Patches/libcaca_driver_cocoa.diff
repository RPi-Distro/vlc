--- libcaca-0.99.beta13b/caca/driver_cocoa.m	2007-11-25 15:00:34.000000000 +0100
+++ libcaca/caca/driver_cocoa.m	2008-01-21 17:39:14.000000000 +0100
@@ -3,7 +3,7 @@
  *  Copyright (c) 2006 Colin Delacroix <colin@zoy.org>
  *                All Rights Reserved
  *
- *  $Id$
+ *  $Id: driver_cocoa.m 1445 2007-12-16 01:50:41Z sam $
  *
  *  This library is free software. It comes without any warranty, to
  *  the extent permitted by applicable law. You can redistribute it
@@ -722,7 +722,7 @@
     return caca_keycode;
 }
 
-static BOOL handle_key_event(struct caca_event *ev, NSEvent* event)
+static BOOL handle_key_event(caca_privevent_t *ev, NSEvent* event)
 {
     if(!ev || !event)
         return NO;
@@ -774,7 +774,7 @@
 }
 
 // TODO: handle CACA_EVENT_RESIZE
-static BOOL handle_mouse_event(caca_display_t *dp, struct caca_event *ev,
+static BOOL handle_mouse_event(caca_display_t *dp, caca_privevent_t *ev,
                                NSEvent* event)
 {
     if(!ev || !event)
@@ -884,7 +884,7 @@
     [pool release];
 }
 
-static int cocoa_get_event(caca_display_t *dp, struct caca_event *ev)
+static int cocoa_get_event(caca_display_t *dp, caca_privevent_t *ev)
 {
     if(s_quit)
     {
@@ -970,12 +970,12 @@
     return 0;
 }
 
-static unsigned int cocoa_get_display_width(caca_display_t *dp)
+static unsigned int cocoa_get_display_width(caca_display_t const *dp)
 {
     return [dp->drv.p->window frame].size.width;
 }
 
-static unsigned int cocoa_get_display_height(caca_display_t *dp)
+static unsigned int cocoa_get_display_height(caca_display_t const *dp)
 {
     return [dp->drv.p->window frame].size.height;
 }
