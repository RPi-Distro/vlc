# modules/video_filter/Makefile.am automatically generated from modules/video_filter/Modules.am by modules/genmf
# DO NOT EDIT THIS FILE DIRECTLY! See Modules.am instead.

basedir = video_filter
dir = video_filter
mods = adjust alphamask atmo audiobargraph_v ball blend blendbench bluescreen canvas chain clone colorthres crop croppadd deinterlace erase extract gaussianblur gradient grain invert logo magnify marq mirror mosaic motionblur motiondetect noise opencv_example opencv_wrapper osdmenu panoramix postproc psychedelic puzzle remoteosd ripple rotate rss rv32 scale scene sharpen swscale swscale_omap transform video_filter_wrapper wall wave yuvp
libvlc_LTLIBRARIES =  $(LTLIBatmo) $(LTLIBopencv_example) $(LTLIBopencv_wrapper) $(LTLIBosdmenu) $(LTLIBpanoramix) $(LTLIBpostproc) $(LTLIBremoteosd) $(LTLIBswscale) $(LTLIBswscale_omap)
EXTRA_LTLIBRARIES =  libatmo_plugin.la libopencv_example_plugin.la libopencv_wrapper_plugin.la libosdmenu_plugin.la libpanoramix_plugin.la libpostproc_plugin.la libremoteosd_plugin.la libswscale_plugin.la libswscale_omap_plugin.la

include $(top_srcdir)/modules/common.am

# The adjust plugin
libadjust_plugin_la_SOURCES = $(SOURCES_adjust)
nodist_libadjust_plugin_la_SOURCES = $(nodist_SOURCES_adjust)
# Force per-target objects:
libadjust_plugin_la_CFLAGS = $(AM_CFLAGS)
libadjust_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libadjust_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libadjust_plugin_la_LIBADD = $(AM_LIBADD)
libadjust_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The alphamask plugin
libalphamask_plugin_la_SOURCES = $(SOURCES_alphamask)
nodist_libalphamask_plugin_la_SOURCES = $(nodist_SOURCES_alphamask)
# Force per-target objects:
libalphamask_plugin_la_CFLAGS = $(AM_CFLAGS)
libalphamask_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libalphamask_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libalphamask_plugin_la_LIBADD = $(AM_LIBADD)
libalphamask_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The atmo plugin
libatmo_plugin_la_SOURCES = $(SOURCES_atmo)
nodist_libatmo_plugin_la_SOURCES = $(nodist_SOURCES_atmo)
# Force per-target objects:
libatmo_plugin_la_CFLAGS = $(AM_CFLAGS)
libatmo_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libatmo_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libatmo_plugin_la_LIBADD = $(AM_LIBADD)
libatmo_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The audiobargraph_v plugin
libaudiobargraph_v_plugin_la_SOURCES = $(SOURCES_audiobargraph_v)
nodist_libaudiobargraph_v_plugin_la_SOURCES = $(nodist_SOURCES_audiobargraph_v)
# Force per-target objects:
libaudiobargraph_v_plugin_la_CFLAGS = $(AM_CFLAGS)
libaudiobargraph_v_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libaudiobargraph_v_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libaudiobargraph_v_plugin_la_LIBADD = $(AM_LIBADD)
libaudiobargraph_v_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The ball plugin
libball_plugin_la_SOURCES = $(SOURCES_ball)
nodist_libball_plugin_la_SOURCES = $(nodist_SOURCES_ball)
# Force per-target objects:
libball_plugin_la_CFLAGS = $(AM_CFLAGS)
libball_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libball_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libball_plugin_la_LIBADD = $(AM_LIBADD)
libball_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The blend plugin
libblend_plugin_la_SOURCES = $(SOURCES_blend)
nodist_libblend_plugin_la_SOURCES = $(nodist_SOURCES_blend)
# Force per-target objects:
libblend_plugin_la_CFLAGS = $(AM_CFLAGS)
libblend_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libblend_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libblend_plugin_la_LIBADD = $(AM_LIBADD)
libblend_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The blendbench plugin
libblendbench_plugin_la_SOURCES = $(SOURCES_blendbench)
nodist_libblendbench_plugin_la_SOURCES = $(nodist_SOURCES_blendbench)
# Force per-target objects:
libblendbench_plugin_la_CFLAGS = $(AM_CFLAGS)
libblendbench_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libblendbench_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libblendbench_plugin_la_LIBADD = $(AM_LIBADD)
libblendbench_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The bluescreen plugin
libbluescreen_plugin_la_SOURCES = $(SOURCES_bluescreen)
nodist_libbluescreen_plugin_la_SOURCES = $(nodist_SOURCES_bluescreen)
# Force per-target objects:
libbluescreen_plugin_la_CFLAGS = $(AM_CFLAGS)
libbluescreen_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libbluescreen_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libbluescreen_plugin_la_LIBADD = $(AM_LIBADD)
libbluescreen_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The canvas plugin
libcanvas_plugin_la_SOURCES = $(SOURCES_canvas)
nodist_libcanvas_plugin_la_SOURCES = $(nodist_SOURCES_canvas)
# Force per-target objects:
libcanvas_plugin_la_CFLAGS = $(AM_CFLAGS)
libcanvas_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libcanvas_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libcanvas_plugin_la_LIBADD = $(AM_LIBADD)
libcanvas_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The chain plugin
libchain_plugin_la_SOURCES = $(SOURCES_chain)
nodist_libchain_plugin_la_SOURCES = $(nodist_SOURCES_chain)
# Force per-target objects:
libchain_plugin_la_CFLAGS = $(AM_CFLAGS)
libchain_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libchain_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libchain_plugin_la_LIBADD = $(AM_LIBADD)
libchain_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The clone plugin
libclone_plugin_la_SOURCES = $(SOURCES_clone)
nodist_libclone_plugin_la_SOURCES = $(nodist_SOURCES_clone)
# Force per-target objects:
libclone_plugin_la_CFLAGS = $(AM_CFLAGS)
libclone_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libclone_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libclone_plugin_la_LIBADD = $(AM_LIBADD)
libclone_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The colorthres plugin
libcolorthres_plugin_la_SOURCES = $(SOURCES_colorthres)
nodist_libcolorthres_plugin_la_SOURCES = $(nodist_SOURCES_colorthres)
# Force per-target objects:
libcolorthres_plugin_la_CFLAGS = $(AM_CFLAGS)
libcolorthres_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libcolorthres_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libcolorthres_plugin_la_LIBADD = $(AM_LIBADD)
libcolorthres_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The crop plugin
libcrop_plugin_la_SOURCES = $(SOURCES_crop)
nodist_libcrop_plugin_la_SOURCES = $(nodist_SOURCES_crop)
# Force per-target objects:
libcrop_plugin_la_CFLAGS = $(AM_CFLAGS)
libcrop_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libcrop_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libcrop_plugin_la_LIBADD = $(AM_LIBADD)
libcrop_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The croppadd plugin
libcroppadd_plugin_la_SOURCES = $(SOURCES_croppadd)
nodist_libcroppadd_plugin_la_SOURCES = $(nodist_SOURCES_croppadd)
# Force per-target objects:
libcroppadd_plugin_la_CFLAGS = $(AM_CFLAGS)
libcroppadd_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libcroppadd_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libcroppadd_plugin_la_LIBADD = $(AM_LIBADD)
libcroppadd_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The deinterlace plugin
libdeinterlace_plugin_la_SOURCES = $(SOURCES_deinterlace)
nodist_libdeinterlace_plugin_la_SOURCES = $(nodist_SOURCES_deinterlace)
# Force per-target objects:
libdeinterlace_plugin_la_CFLAGS = $(AM_CFLAGS)
libdeinterlace_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libdeinterlace_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libdeinterlace_plugin_la_LIBADD = $(AM_LIBADD)
libdeinterlace_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The erase plugin
liberase_plugin_la_SOURCES = $(SOURCES_erase)
nodist_liberase_plugin_la_SOURCES = $(nodist_SOURCES_erase)
# Force per-target objects:
liberase_plugin_la_CFLAGS = $(AM_CFLAGS)
liberase_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
liberase_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
liberase_plugin_la_LIBADD = $(AM_LIBADD)
liberase_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The extract plugin
libextract_plugin_la_SOURCES = $(SOURCES_extract)
nodist_libextract_plugin_la_SOURCES = $(nodist_SOURCES_extract)
# Force per-target objects:
libextract_plugin_la_CFLAGS = $(AM_CFLAGS)
libextract_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libextract_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libextract_plugin_la_LIBADD = $(AM_LIBADD)
libextract_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The gaussianblur plugin
libgaussianblur_plugin_la_SOURCES = $(SOURCES_gaussianblur)
nodist_libgaussianblur_plugin_la_SOURCES = $(nodist_SOURCES_gaussianblur)
# Force per-target objects:
libgaussianblur_plugin_la_CFLAGS = $(AM_CFLAGS)
libgaussianblur_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libgaussianblur_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libgaussianblur_plugin_la_LIBADD = $(AM_LIBADD)
libgaussianblur_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The gradient plugin
libgradient_plugin_la_SOURCES = $(SOURCES_gradient)
nodist_libgradient_plugin_la_SOURCES = $(nodist_SOURCES_gradient)
# Force per-target objects:
libgradient_plugin_la_CFLAGS = $(AM_CFLAGS)
libgradient_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libgradient_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libgradient_plugin_la_LIBADD = $(AM_LIBADD)
libgradient_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The grain plugin
libgrain_plugin_la_SOURCES = $(SOURCES_grain)
nodist_libgrain_plugin_la_SOURCES = $(nodist_SOURCES_grain)
# Force per-target objects:
libgrain_plugin_la_CFLAGS = $(AM_CFLAGS)
libgrain_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libgrain_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libgrain_plugin_la_LIBADD = $(AM_LIBADD)
libgrain_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The invert plugin
libinvert_plugin_la_SOURCES = $(SOURCES_invert)
nodist_libinvert_plugin_la_SOURCES = $(nodist_SOURCES_invert)
# Force per-target objects:
libinvert_plugin_la_CFLAGS = $(AM_CFLAGS)
libinvert_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libinvert_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libinvert_plugin_la_LIBADD = $(AM_LIBADD)
libinvert_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The logo plugin
liblogo_plugin_la_SOURCES = $(SOURCES_logo)
nodist_liblogo_plugin_la_SOURCES = $(nodist_SOURCES_logo)
# Force per-target objects:
liblogo_plugin_la_CFLAGS = $(AM_CFLAGS)
liblogo_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
liblogo_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
liblogo_plugin_la_LIBADD = $(AM_LIBADD)
liblogo_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The magnify plugin
libmagnify_plugin_la_SOURCES = $(SOURCES_magnify)
nodist_libmagnify_plugin_la_SOURCES = $(nodist_SOURCES_magnify)
# Force per-target objects:
libmagnify_plugin_la_CFLAGS = $(AM_CFLAGS)
libmagnify_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libmagnify_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libmagnify_plugin_la_LIBADD = $(AM_LIBADD)
libmagnify_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The marq plugin
libmarq_plugin_la_SOURCES = $(SOURCES_marq)
nodist_libmarq_plugin_la_SOURCES = $(nodist_SOURCES_marq)
# Force per-target objects:
libmarq_plugin_la_CFLAGS = $(AM_CFLAGS)
libmarq_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libmarq_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libmarq_plugin_la_LIBADD = $(AM_LIBADD)
libmarq_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The mirror plugin
libmirror_plugin_la_SOURCES = $(SOURCES_mirror)
nodist_libmirror_plugin_la_SOURCES = $(nodist_SOURCES_mirror)
# Force per-target objects:
libmirror_plugin_la_CFLAGS = $(AM_CFLAGS)
libmirror_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libmirror_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libmirror_plugin_la_LIBADD = $(AM_LIBADD)
libmirror_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The mosaic plugin
libmosaic_plugin_la_SOURCES = $(SOURCES_mosaic)
nodist_libmosaic_plugin_la_SOURCES = $(nodist_SOURCES_mosaic)
# Force per-target objects:
libmosaic_plugin_la_CFLAGS = $(AM_CFLAGS)
libmosaic_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libmosaic_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libmosaic_plugin_la_LIBADD = $(AM_LIBADD)
libmosaic_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The motionblur plugin
libmotionblur_plugin_la_SOURCES = $(SOURCES_motionblur)
nodist_libmotionblur_plugin_la_SOURCES = $(nodist_SOURCES_motionblur)
# Force per-target objects:
libmotionblur_plugin_la_CFLAGS = $(AM_CFLAGS)
libmotionblur_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libmotionblur_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libmotionblur_plugin_la_LIBADD = $(AM_LIBADD)
libmotionblur_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The motiondetect plugin
libmotiondetect_plugin_la_SOURCES = $(SOURCES_motiondetect)
nodist_libmotiondetect_plugin_la_SOURCES = $(nodist_SOURCES_motiondetect)
# Force per-target objects:
libmotiondetect_plugin_la_CFLAGS = $(AM_CFLAGS)
libmotiondetect_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libmotiondetect_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libmotiondetect_plugin_la_LIBADD = $(AM_LIBADD)
libmotiondetect_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The noise plugin
libnoise_plugin_la_SOURCES = $(SOURCES_noise)
nodist_libnoise_plugin_la_SOURCES = $(nodist_SOURCES_noise)
# Force per-target objects:
libnoise_plugin_la_CFLAGS = $(AM_CFLAGS)
libnoise_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libnoise_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libnoise_plugin_la_LIBADD = $(AM_LIBADD)
libnoise_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The opencv_example plugin
libopencv_example_plugin_la_SOURCES = $(SOURCES_opencv_example)
nodist_libopencv_example_plugin_la_SOURCES = $(nodist_SOURCES_opencv_example)
# Force per-target objects:
libopencv_example_plugin_la_CFLAGS = $(AM_CFLAGS)
libopencv_example_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libopencv_example_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libopencv_example_plugin_la_LIBADD = $(AM_LIBADD)
libopencv_example_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The opencv_wrapper plugin
libopencv_wrapper_plugin_la_SOURCES = $(SOURCES_opencv_wrapper)
nodist_libopencv_wrapper_plugin_la_SOURCES = $(nodist_SOURCES_opencv_wrapper)
# Force per-target objects:
libopencv_wrapper_plugin_la_CFLAGS = $(AM_CFLAGS)
libopencv_wrapper_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libopencv_wrapper_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libopencv_wrapper_plugin_la_LIBADD = $(AM_LIBADD)
libopencv_wrapper_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The osdmenu plugin
libosdmenu_plugin_la_SOURCES = $(SOURCES_osdmenu)
nodist_libosdmenu_plugin_la_SOURCES = $(nodist_SOURCES_osdmenu)
# Force per-target objects:
libosdmenu_plugin_la_CFLAGS = $(AM_CFLAGS)
libosdmenu_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libosdmenu_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libosdmenu_plugin_la_LIBADD = $(AM_LIBADD)
libosdmenu_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The panoramix plugin
libpanoramix_plugin_la_SOURCES = $(SOURCES_panoramix)
nodist_libpanoramix_plugin_la_SOURCES = $(nodist_SOURCES_panoramix)
# Force per-target objects:
libpanoramix_plugin_la_CFLAGS = $(AM_CFLAGS)
libpanoramix_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libpanoramix_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libpanoramix_plugin_la_LIBADD = $(AM_LIBADD)
libpanoramix_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The postproc plugin
libpostproc_plugin_la_SOURCES = $(SOURCES_postproc)
nodist_libpostproc_plugin_la_SOURCES = $(nodist_SOURCES_postproc)
# Force per-target objects:
libpostproc_plugin_la_CFLAGS = $(AM_CFLAGS)
libpostproc_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libpostproc_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libpostproc_plugin_la_LIBADD = $(AM_LIBADD)
libpostproc_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The psychedelic plugin
libpsychedelic_plugin_la_SOURCES = $(SOURCES_psychedelic)
nodist_libpsychedelic_plugin_la_SOURCES = $(nodist_SOURCES_psychedelic)
# Force per-target objects:
libpsychedelic_plugin_la_CFLAGS = $(AM_CFLAGS)
libpsychedelic_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libpsychedelic_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libpsychedelic_plugin_la_LIBADD = $(AM_LIBADD)
libpsychedelic_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The puzzle plugin
libpuzzle_plugin_la_SOURCES = $(SOURCES_puzzle)
nodist_libpuzzle_plugin_la_SOURCES = $(nodist_SOURCES_puzzle)
# Force per-target objects:
libpuzzle_plugin_la_CFLAGS = $(AM_CFLAGS)
libpuzzle_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libpuzzle_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libpuzzle_plugin_la_LIBADD = $(AM_LIBADD)
libpuzzle_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The remoteosd plugin
libremoteosd_plugin_la_SOURCES = $(SOURCES_remoteosd)
nodist_libremoteosd_plugin_la_SOURCES = $(nodist_SOURCES_remoteosd)
# Force per-target objects:
libremoteosd_plugin_la_CFLAGS = $(AM_CFLAGS)
libremoteosd_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libremoteosd_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libremoteosd_plugin_la_LIBADD = $(AM_LIBADD)
libremoteosd_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The ripple plugin
libripple_plugin_la_SOURCES = $(SOURCES_ripple)
nodist_libripple_plugin_la_SOURCES = $(nodist_SOURCES_ripple)
# Force per-target objects:
libripple_plugin_la_CFLAGS = $(AM_CFLAGS)
libripple_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libripple_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libripple_plugin_la_LIBADD = $(AM_LIBADD)
libripple_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The rotate plugin
librotate_plugin_la_SOURCES = $(SOURCES_rotate)
nodist_librotate_plugin_la_SOURCES = $(nodist_SOURCES_rotate)
# Force per-target objects:
librotate_plugin_la_CFLAGS = $(AM_CFLAGS)
librotate_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
librotate_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
librotate_plugin_la_LIBADD = $(AM_LIBADD)
librotate_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The rss plugin
librss_plugin_la_SOURCES = $(SOURCES_rss)
nodist_librss_plugin_la_SOURCES = $(nodist_SOURCES_rss)
# Force per-target objects:
librss_plugin_la_CFLAGS = $(AM_CFLAGS)
librss_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
librss_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
librss_plugin_la_LIBADD = $(AM_LIBADD)
librss_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The rv32 plugin
librv32_plugin_la_SOURCES = $(SOURCES_rv32)
nodist_librv32_plugin_la_SOURCES = $(nodist_SOURCES_rv32)
# Force per-target objects:
librv32_plugin_la_CFLAGS = $(AM_CFLAGS)
librv32_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
librv32_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
librv32_plugin_la_LIBADD = $(AM_LIBADD)
librv32_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The scale plugin
libscale_plugin_la_SOURCES = $(SOURCES_scale)
nodist_libscale_plugin_la_SOURCES = $(nodist_SOURCES_scale)
# Force per-target objects:
libscale_plugin_la_CFLAGS = $(AM_CFLAGS)
libscale_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libscale_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libscale_plugin_la_LIBADD = $(AM_LIBADD)
libscale_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The scene plugin
libscene_plugin_la_SOURCES = $(SOURCES_scene)
nodist_libscene_plugin_la_SOURCES = $(nodist_SOURCES_scene)
# Force per-target objects:
libscene_plugin_la_CFLAGS = $(AM_CFLAGS)
libscene_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libscene_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libscene_plugin_la_LIBADD = $(AM_LIBADD)
libscene_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The sharpen plugin
libsharpen_plugin_la_SOURCES = $(SOURCES_sharpen)
nodist_libsharpen_plugin_la_SOURCES = $(nodist_SOURCES_sharpen)
# Force per-target objects:
libsharpen_plugin_la_CFLAGS = $(AM_CFLAGS)
libsharpen_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libsharpen_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libsharpen_plugin_la_LIBADD = $(AM_LIBADD)
libsharpen_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The swscale plugin
libswscale_plugin_la_SOURCES = $(SOURCES_swscale)
nodist_libswscale_plugin_la_SOURCES = $(nodist_SOURCES_swscale)
# Force per-target objects:
libswscale_plugin_la_CFLAGS = $(AM_CFLAGS)
libswscale_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libswscale_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libswscale_plugin_la_LIBADD = $(AM_LIBADD)
libswscale_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The swscale_omap plugin
libswscale_omap_plugin_la_SOURCES = $(SOURCES_swscale_omap)
nodist_libswscale_omap_plugin_la_SOURCES = $(nodist_SOURCES_swscale_omap)
# Force per-target objects:
libswscale_omap_plugin_la_CFLAGS = $(AM_CFLAGS)
libswscale_omap_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libswscale_omap_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libswscale_omap_plugin_la_LIBADD = $(AM_LIBADD)
libswscale_omap_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The transform plugin
libtransform_plugin_la_SOURCES = $(SOURCES_transform)
nodist_libtransform_plugin_la_SOURCES = $(nodist_SOURCES_transform)
# Force per-target objects:
libtransform_plugin_la_CFLAGS = $(AM_CFLAGS)
libtransform_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libtransform_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libtransform_plugin_la_LIBADD = $(AM_LIBADD)
libtransform_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The video_filter_wrapper plugin
libvideo_filter_wrapper_plugin_la_SOURCES = $(SOURCES_video_filter_wrapper)
nodist_libvideo_filter_wrapper_plugin_la_SOURCES = $(nodist_SOURCES_video_filter_wrapper)
# Force per-target objects:
libvideo_filter_wrapper_plugin_la_CFLAGS = $(AM_CFLAGS)
libvideo_filter_wrapper_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libvideo_filter_wrapper_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libvideo_filter_wrapper_plugin_la_LIBADD = $(AM_LIBADD)
libvideo_filter_wrapper_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The wall plugin
libwall_plugin_la_SOURCES = $(SOURCES_wall)
nodist_libwall_plugin_la_SOURCES = $(nodist_SOURCES_wall)
# Force per-target objects:
libwall_plugin_la_CFLAGS = $(AM_CFLAGS)
libwall_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libwall_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libwall_plugin_la_LIBADD = $(AM_LIBADD)
libwall_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The wave plugin
libwave_plugin_la_SOURCES = $(SOURCES_wave)
nodist_libwave_plugin_la_SOURCES = $(nodist_SOURCES_wave)
# Force per-target objects:
libwave_plugin_la_CFLAGS = $(AM_CFLAGS)
libwave_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libwave_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libwave_plugin_la_LIBADD = $(AM_LIBADD)
libwave_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The yuvp plugin
libyuvp_plugin_la_SOURCES = $(SOURCES_yuvp)
nodist_libyuvp_plugin_la_SOURCES = $(nodist_SOURCES_yuvp)
# Force per-target objects:
libyuvp_plugin_la_CFLAGS = $(AM_CFLAGS)
libyuvp_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libyuvp_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libyuvp_plugin_la_LIBADD = $(AM_LIBADD)
libyuvp_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

