xmm_quantize_sub.c: In function 'init_xrpow_core_sse':
xmm_quantize_sub.c:65:18: warning: SSE vector return without SSE enabled changes the ABI [-W
psabi]
     const __m128 vec_fabs_mask = _mm_loadu_ps(&fabs_mask._float[0]);
                  ^
In file included from xmm_quantize_sub.c:37:0:
/usr/lib/gcc/i686-w64-mingw32/4.9.0/include/xmmintrin.h:933:1: error: inlining failed in call to always_inline '_mm_loadu_ps': target specific option mismatch
 _mm_loadu_ps (float const *__P)
 ^
xmm_quantize_sub.c:65:18: error: called from here
     const __m128 vec_fabs_mask = _mm_loadu_ps(&fabs_mask._float[0]);
                  ^
--- lame/libmp3lame/vector/xmm_quantize_sub.c.orig	2018-10-04 13:48:32.286892400 +0200
+++ lame/libmp3lame/vector/xmm_quantize_sub.c	2018-10-04 13:49:23.640116100 +0200
@@ -35,6 +35,7 @@
 #ifdef HAVE_XMMINTRIN_H
 
 #include <xmmintrin.h>
+#pragma GCC target("sse")
 
 typedef union {
     int32_t _i_32[4]; /* unions are initialized by its first member */
@@ -132,6 +133,7 @@ store4(__m128 v, float* f0, float* f1, f
 }
 
 
+#pragma GCC target("sse2")
 SSE_FUNCTION void
 fht_SSE2(FLOAT * fz, int n)
 {
