# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

###############################################################################
# Automake targets and declarations
###############################################################################


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@LOADER_TRUE@am__append_1 = libs/loader
@HAVE_GCRYPT_TRUE@am__append_2 = libs/srtp
@HAVE_MINIZIP_FALSE@@HAVE_ZLIB_TRUE@am__append_3 = libs/unzip
@BUILD_VLC_TRUE@am__append_4 = bin
@BUILD_MOZILLA_TRUE@am__append_5 = projects/mozilla
@BUILD_ACTIVEX_TRUE@am__append_6 = projects/activex
@BUILD_VLC_TRUE@am__append_7 = vlc$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(dist_noinst_SCRIPTS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(top_srcdir)/configure \
	$(top_srcdir)/extras/package/macosx/Info.plist.in \
	$(top_srcdir)/extras/package/macosx/Resources/English.lproj/InfoPlist.strings.in \
	$(top_srcdir)/extras/package/macosx/plugin/Info.plist.in \
	$(top_srcdir)/extras/package/macosx/plugin/InstallerInfo.plist.in \
	$(top_srcdir)/extras/package/win32/spad.nsi.in \
	$(top_srcdir)/extras/package/win32/vlc.win32.nsi.in ABOUT-NLS \
	AUTHORS COPYING ChangeLog INSTALL NEWS THANKS \
	autotools/compile autotools/config.guess \
	autotools/config.rpath autotools/config.sub autotools/depcomp \
	autotools/install-sh autotools/ltmain.sh autotools/missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/flags.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/progtest.m4 \
	$(top_srcdir)/m4/vlc.m4 $(top_srcdir)/m4/with_pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = extras/package/win32/spad.nsi \
	extras/package/win32/vlc.win32.nsi \
	extras/package/macosx/Info.plist \
	extras/package/macosx/Resources/English.lproj/InfoPlist.strings \
	extras/package/macosx/plugin/Info.plist \
	extras/package/macosx/plugin/InstallerInfo.plist
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(bindir)"
SCRIPTS = $(bin_SCRIPTS) $(dist_noinst_SCRIPTS) \
	$(nodist_noinst_SCRIPTS) $(noinst_SCRIPTS)
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
DATA = $(noinst_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir dist dist-all distcheck
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
GZIP_ENV = --best
DIST_ARCHIVES = $(distdir).tar.bz2
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
ALIASES = @ALIASES@
ALSA_CFLAGS = @ALSA_CFLAGS@
ALSA_LIBS = @ALSA_LIBS@
AMTAR = @AMTAR@
AM_CPPFLAGS = @AM_CPPFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ARCH = @ARCH@
ARM_NEON_CFLAGS = @ARM_NEON_CFLAGS@
AS = @AS@
ASM = @ASM@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AVCODEC_CFLAGS = @AVCODEC_CFLAGS@
AVCODEC_LIBS = @AVCODEC_LIBS@
AVFORMAT_CFLAGS = @AVFORMAT_CFLAGS@
AVFORMAT_LIBS = @AVFORMAT_LIBS@
AWK = @AWK@
BONJOUR_CFLAGS = @BONJOUR_CFLAGS@
BONJOUR_LIBS = @BONJOUR_LIBS@
CACA_CFLAGS = @CACA_CFLAGS@
CACA_LIBS = @CACA_LIBS@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONTRIB_DIR = @CONTRIB_DIR@
COPYRIGHT_MESSAGE = @COPYRIGHT_MESSAGE@
COPYRIGHT_YEARS = @COPYRIGHT_YEARS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH = @CYGPATH@
CYGPATH_W = @CYGPATH_W@
DBUS_CFLAGS = @DBUS_CFLAGS@
DBUS_LIBS = @DBUS_LIBS@
DC1394_CFLAGS = @DC1394_CFLAGS@
DC1394_LIBS = @DC1394_LIBS@
DCA_CFLAGS = @DCA_CFLAGS@
DCA_LIBS = @DCA_LIBS@
DEFS = @DEFS@
DEFS_BIGENDIAN = @DEFS_BIGENDIAN@
DEPDIR = @DEPDIR@
DIRAC_CFLAGS = @DIRAC_CFLAGS@
DIRAC_LIBS = @DIRAC_LIBS@
DIRECTFB_CFLAGS = @DIRECTFB_CFLAGS@
DIRECTFB_CONFIG = @DIRECTFB_CONFIG@
DIRECTFB_LIBS = @DIRECTFB_LIBS@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DVDNAV_CONFIG = @DVDNAV_CONFIG@
DV_CFLAGS = @DV_CFLAGS@
DV_LIBS = @DV_LIBS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FILE_LIBVLCCORE_DLL = @FILE_LIBVLCCORE_DLL@
FILE_LIBVLC_DLL = @FILE_LIBVLC_DLL@
FLAC_CFLAGS = @FLAC_CFLAGS@
FLAC_LIBS = @FLAC_LIBS@
FLUIDSYNTH_CFLAGS = @FLUIDSYNTH_CFLAGS@
FLUIDSYNTH_LIBS = @FLUIDSYNTH_LIBS@
FREETYPE_CFLAGS = @FREETYPE_CFLAGS@
FREETYPE_LIBS = @FREETYPE_LIBS@
FRIBIDI_CFLAGS = @FRIBIDI_CFLAGS@
FRIBIDI_LIBS = @FRIBIDI_LIBS@
GCRYPT_CFLAGS = @GCRYPT_CFLAGS@
GCRYPT_LIBS = @GCRYPT_LIBS@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GL_CFLAGS = @GL_CFLAGS@
GL_LIBS = @GL_LIBS@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
GNOMEVFS_CFLAGS = @GNOMEVFS_CFLAGS@
GNOMEVFS_LIBS = @GNOMEVFS_LIBS@
GNUGETOPT_LIBS = @GNUGETOPT_LIBS@
GNUTLS_CFLAGS = @GNUTLS_CFLAGS@
GNUTLS_LIBS = @GNUTLS_LIBS@
GOOM_CFLAGS = @GOOM_CFLAGS@
GOOM_LIBS = @GOOM_LIBS@
GREP = @GREP@
HILDON_CFLAGS = @HILDON_CFLAGS@
HILDON_FM_CFLAGS = @HILDON_FM_CFLAGS@
HILDON_FM_LIBS = @HILDON_FM_LIBS@
HILDON_LIBS = @HILDON_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
JACK_CFLAGS = @JACK_CFLAGS@
JACK_LIBS = @JACK_LIBS@
KATE_CFLAGS = @KATE_CFLAGS@
KATE_LIBS = @KATE_LIBS@
KDE4_CONFIG = @KDE4_CONFIG@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBASS_CFLAGS = @LIBASS_CFLAGS@
LIBASS_LIBS = @LIBASS_LIBS@
LIBCDDB_CFLAGS = @LIBCDDB_CFLAGS@
LIBCDDB_LIBS = @LIBCDDB_LIBS@
LIBCDIO_CFLAGS = @LIBCDIO_CFLAGS@
LIBCDIO_LIBS = @LIBCDIO_LIBS@
LIBDL = @LIBDL@
LIBEXT = @LIBEXT@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBMODPLUG_CFLAGS = @LIBMODPLUG_CFLAGS@
LIBMODPLUG_LIBS = @LIBMODPLUG_LIBS@
LIBMPEG2_CFLAGS = @LIBMPEG2_CFLAGS@
LIBMPEG2_LIBS = @LIBMPEG2_LIBS@
LIBOBJS = @LIBOBJS@
LIBPROXY_CFLAGS = @LIBPROXY_CFLAGS@
LIBPROXY_LIBS = @LIBPROXY_LIBS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBV4L2_CFLAGS = @LIBV4L2_CFLAGS@
LIBV4L2_LIBS = @LIBV4L2_LIBS@
LIBV4L_CFLAGS = @LIBV4L_CFLAGS@
LIBV4L_LIBS = @LIBV4L_LIBS@
LIBVA_CFLAGS = @LIBVA_CFLAGS@
LIBVA_LIBS = @LIBVA_LIBS@
LIBVCDINFO_CFLAGS = @LIBVCDINFO_CFLAGS@
LIBVCDINFO_LIBS = @LIBVCDINFO_LIBS@
LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
LIBXML2_LIBS = @LIBXML2_LIBS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
LTLIBa52tofloat32 = @LTLIBa52tofloat32@
LTLIBaa = @LTLIBaa@
LTLIBaccess_alsa = @LTLIBaccess_alsa@
LTLIBaccess_avio = @LTLIBaccess_avio@
LTLIBaccess_dv = @LTLIBaccess_dv@
LTLIBaccess_eyetv = @LTLIBaccess_eyetv@
LTLIBaccess_gnomevfs = @LTLIBaccess_gnomevfs@
LTLIBaccess_jack = @LTLIBaccess_jack@
LTLIBaccess_mmap = @LTLIBaccess_mmap@
LTLIBaccess_mtp = @LTLIBaccess_mtp@
LTLIBaccess_oss = @LTLIBaccess_oss@
LTLIBaccess_output_shout = @LTLIBaccess_output_shout@
LTLIBaccess_realrtsp = @LTLIBaccess_realrtsp@
LTLIBaccess_sftp = @LTLIBaccess_sftp@
LTLIBaccess_smb = @LTLIBaccess_smb@
LTLIBalsa = @LTLIBalsa@
LTLIBaout_directx = @LTLIBaout_directx@
LTLIBaout_sdl = @LTLIBaout_sdl@
LTLIBasademux = @LTLIBasademux@
LTLIBatmo = @LTLIBatmo@
LTLIBauhal = @LTLIBauhal@
LTLIBavcodec = @LTLIBavcodec@
LTLIBavformat = @LTLIBavformat@
LTLIBbda = @LTLIBbda@
LTLIBbonjour = @LTLIBbonjour@
LTLIBcaca = @LTLIBcaca@
LTLIBcdda = @LTLIBcdda@
LTLIBdbus = @LTLIBdbus@
LTLIBdc1394 = @LTLIBdc1394@
LTLIBdirac = @LTLIBdirac@
LTLIBdirect3d = @LTLIBdirect3d@
LTLIBdirectfb = @LTLIBdirectfb@
LTLIBdirectx = @LTLIBdirectx@
LTLIBdmo = @LTLIBdmo@
LTLIBdshow = @LTLIBdshow@
LTLIBdtstofloat32 = @LTLIBdtstofloat32@
LTLIBdvb = @LTLIBdvb@
LTLIBdvdnav = @LTLIBdvdnav@
LTLIBdvdread = @LTLIBdvdread@
LTLIBdynamicoverlay = @LTLIBdynamicoverlay@
LTLIBfaad = @LTLIBfaad@
LTLIBfb = @LTLIBfb@
LTLIBfbosd = @LTLIBfbosd@
LTLIBflac = @LTLIBflac@
LTLIBfluidsynth = @LTLIBfluidsynth@
LTLIBfreetype = @LTLIBfreetype@
LTLIBggi = @LTLIBggi@
LTLIBglobalhotkeys = @LTLIBglobalhotkeys@
LTLIBglwin32 = @LTLIBglwin32@
LTLIBgme = @LTLIBgme@
LTLIBgnutls = @LTLIBgnutls@
LTLIBgoom = @LTLIBgoom@
LTLIBgrowl = @LTLIBgrowl@
LTLIBgrowl_udp = @LTLIBgrowl_udp@
LTLIBhd1000a = @LTLIBhd1000a@
LTLIBhd1000v = @LTLIBhd1000v@
LTLIBhildon = @LTLIBhildon@
LTLIBid3tag = @LTLIBid3tag@
LTLIBinhibit = @LTLIBinhibit@
LTLIBjack = @LTLIBjack@
LTLIBkate = @LTLIBkate@
LTLIBlibass = @LTLIBlibass@
LTLIBlibmpeg2 = @LTLIBlibmpeg2@
LTLIBlirc = @LTLIBlirc@
LTLIBlive555 = @LTLIBlive555@
LTLIBmacosx = @LTLIBmacosx@
LTLIBmacosx_dialog_provider = @LTLIBmacosx_dialog_provider@
LTLIBminimal_macosx = @LTLIBminimal_macosx@
LTLIBmkv = @LTLIBmkv@
LTLIBmod = @LTLIBmod@
LTLIBmozilla = @LTLIBmozilla@
LTLIBmpc = @LTLIBmpc@
LTLIBmpgatofixed32 = @LTLIBmpgatofixed32@
LTLIBmtp = @LTLIBmtp@
LTLIBmux_ogg = @LTLIBmux_ogg@
LTLIBmux_ts = @LTLIBmux_ts@
LTLIBncurses = @LTLIBncurses@
LTLIBnotify = @LTLIBnotify@
LTLIBogg = @LTLIBogg@
LTLIBoldhttp = @LTLIBoldhttp@
LTLIBoldtelnet = @LTLIBoldtelnet@
LTLIBomapfb = @LTLIBomapfb@
LTLIBomxil = @LTLIBomxil@
LTLIBopencv_example = @LTLIBopencv_example@
LTLIBopencv_wrapper = @LTLIBopencv_wrapper@
LTLIBopengl = @LTLIBopengl@
LTLIBosd_parser = @LTLIBosd_parser@
LTLIBosdmenu = @LTLIBosdmenu@
LTLIBoss = @LTLIBoss@
LTLIBosso_screensaver = @LTLIBosso_screensaver@
LTLIBpanoramix = @LTLIBpanoramix@
LTLIBpng = @LTLIBpng@
LTLIBportaudio = @LTLIBportaudio@
LTLIBpostproc = @LTLIBpostproc@
LTLIBprojectm = @LTLIBprojectm@
LTLIBpulse = @LTLIBpulse@
LTLIBpvr = @LTLIBpvr@
LTLIBqt4 = @LTLIBqt4@
LTLIBqtcapture = @LTLIBqtcapture@
LTLIBquicktime = @LTLIBquicktime@
LTLIBrealvideo = @LTLIBrealvideo@
LTLIBremoteosd = @LTLIBremoteosd@
LTLIBschroedinger = @LTLIBschroedinger@
LTLIBscreen = @LTLIBscreen@
LTLIBsdl_image = @LTLIBsdl_image@
LTLIBshine = @LTLIBshine@
LTLIBskins2 = @LTLIBskins2@
LTLIBsnapshot = @LTLIBsnapshot@
LTLIBspeex = @LTLIBspeex@
LTLIBsqlite = @LTLIBsqlite@
LTLIBstream_out_raop = @LTLIBstream_out_raop@
LTLIBstream_out_switcher = @LTLIBstream_out_switcher@
LTLIBsvg = @LTLIBsvg@
LTLIBsvgalib = @LTLIBsvgalib@
LTLIBswscale = @LTLIBswscale@
LTLIBswscale_omap = @LTLIBswscale_omap@
LTLIBtaglib = @LTLIBtaglib@
LTLIBtelepathy = @LTLIBtelepathy@
LTLIBtelx = @LTLIBtelx@
LTLIBtheora = @LTLIBtheora@
LTLIBtremor = @LTLIBtremor@
LTLIBts = @LTLIBts@
LTLIBtwolame = @LTLIBtwolame@
LTLIBudev = @LTLIBudev@
LTLIBunzip = @LTLIBunzip@
LTLIBupnp_cc = @LTLIBupnp_cc@
LTLIBupnp_intel = @LTLIBupnp_intel@
LTLIBv4l = @LTLIBv4l@
LTLIBv4l2 = @LTLIBv4l2@
LTLIBvcd = @LTLIBvcd@
LTLIBvcdx = @LTLIBvcdx@
LTLIBvisual = @LTLIBvisual@
LTLIBvorbis = @LTLIBvorbis@
LTLIBvout_macosx = @LTLIBvout_macosx@
LTLIBvout_sdl = @LTLIBvout_sdl@
LTLIBwaveout = @LTLIBwaveout@
LTLIBwingapi = @LTLIBwingapi@
LTLIBwingdi = @LTLIBwingdi@
LTLIBwma_fixed = @LTLIBwma_fixed@
LTLIBx264 = @LTLIBx264@
LTLIBxcb_apps = @LTLIBxcb_apps@
LTLIBxcb_glx = @LTLIBxcb_glx@
LTLIBxcb_screen = @LTLIBxcb_screen@
LTLIBxcb_window = @LTLIBxcb_window@
LTLIBxcb_x11 = @LTLIBxcb_x11@
LTLIBxcb_xv = @LTLIBxcb_xv@
LTLIBxdg_screensaver = @LTLIBxdg_screensaver@
LTLIBxml = @LTLIBxml@
LTLIBxosd = @LTLIBxosd@
LTLIBxscreensaver = @LTLIBxscreensaver@
LTLIBzip = @LTLIBzip@
LTLIBzvbi = @LTLIBzvbi@
LUAC = @LUAC@
LUA_CFLAGS = @LUA_CFLAGS@
LUA_LIBS = @LUA_LIBS@
MACOSX_DEPLOYMENT_TARGET = @MACOSX_DEPLOYMENT_TARGET@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MIDL = @MIDL@
MINIZIP_CFLAGS = @MINIZIP_CFLAGS@
MINIZIP_LIBS = @MINIZIP_LIBS@
MKDIR_P = @MKDIR_P@
MMX_CFLAGS = @MMX_CFLAGS@
MOC = @MOC@
MOZILLA_CFLAGS = @MOZILLA_CFLAGS@
MOZILLA_CONFIG = @MOZILLA_CONFIG@
MOZILLA_LIBS = @MOZILLA_LIBS@
MOZILLA_SDK_PATH = @MOZILLA_SDK_PATH@
MSGFMT = @MSGFMT@
MSGFMT_015 = @MSGFMT_015@
MSGMERGE = @MSGMERGE@
MTP_CFLAGS = @MTP_CFLAGS@
MTP_LIBS = @MTP_LIBS@
MUX_OGG_CFLAGS = @MUX_OGG_CFLAGS@
MUX_OGG_LIBS = @MUX_OGG_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
NOTIFY_CFLAGS = @NOTIFY_CFLAGS@
NOTIFY_LIBS = @NOTIFY_LIBS@
OBJC = @OBJC@
OBJCDEPMODE = @OBJCDEPMODE@
OBJCFLAGS = @OBJCFLAGS@
OBJCOPY = @OBJCOPY@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OGG_CFLAGS = @OGG_CFLAGS@
OGG_LIBS = @OGG_LIBS@
OPENCV_CFLAGS = @OPENCV_CFLAGS@
OPENCV_LIBS = @OPENCV_LIBS@
OSSO_SCREENSAVER_CFLAGS = @OSSO_SCREENSAVER_CFLAGS@
OSSO_SCREENSAVER_LIBS = @OSSO_SCREENSAVER_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PCRE_CFLAGS = @PCRE_CFLAGS@
PCRE_LIBS = @PCRE_LIBS@
PEFLAGS = @PEFLAGS@
PKGDIR = @PKGDIR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PORTAUDIO_CFLAGS = @PORTAUDIO_CFLAGS@
PORTAUDIO_LIBS = @PORTAUDIO_LIBS@
POSTPROC_CFLAGS = @POSTPROC_CFLAGS@
POSTPROC_LIBS = @POSTPROC_LIBS@
POSUB = @POSUB@
PROJECTM2_CFLAGS = @PROJECTM2_CFLAGS@
PROJECTM2_LIBS = @PROJECTM2_LIBS@
PROJECTM_CFLAGS = @PROJECTM_CFLAGS@
PROJECTM_LIBS = @PROJECTM_LIBS@
PULSE_CFLAGS = @PULSE_CFLAGS@
PULSE_LIBS = @PULSE_LIBS@
QT4LOCALEDIR = @QT4LOCALEDIR@
QT4_CFLAGS = @QT4_CFLAGS@
QT4_LIBS = @QT4_LIBS@
RANLIB = @RANLIB@
RCC = @RCC@
SCHROEDINGER_CFLAGS = @SCHROEDINGER_CFLAGS@
SCHROEDINGER_LIBS = @SCHROEDINGER_LIBS@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_IMAGE_CFLAGS = @SDL_IMAGE_CFLAGS@
SDL_IMAGE_LIBS = @SDL_IMAGE_LIBS@
SDL_LIBS = @SDL_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHOUT_CFLAGS = @SHOUT_CFLAGS@
SHOUT_LIBS = @SHOUT_LIBS@
SOCKET_LIBS = @SOCKET_LIBS@
SPEEX_CFLAGS = @SPEEX_CFLAGS@
SPEEX_LIBS = @SPEEX_LIBS@
SQLITE_CFLAGS = @SQLITE_CFLAGS@
SQLITE_LIBS = @SQLITE_LIBS@
SSE2_CFLAGS = @SSE2_CFLAGS@
STRIP = @STRIP@
SVG_CFLAGS = @SVG_CFLAGS@
SVG_LIBS = @SVG_LIBS@
SWSCALE_CFLAGS = @SWSCALE_CFLAGS@
SWSCALE_LIBS = @SWSCALE_LIBS@
SYS = @SYS@
TAGLIB_CFLAGS = @TAGLIB_CFLAGS@
TAGLIB_LIBS = @TAGLIB_LIBS@
THEORA_CFLAGS = @THEORA_CFLAGS@
THEORA_LIBS = @THEORA_LIBS@
TIGER_CFLAGS = @TIGER_CFLAGS@
TIGER_LIBS = @TIGER_LIBS@
TWOLAME_CFLAGS = @TWOLAME_CFLAGS@
TWOLAME_LIBS = @TWOLAME_LIBS@
U2D = @U2D@
UDEV_CFLAGS = @UDEV_CFLAGS@
UDEV_LIBS = @UDEV_LIBS@
UIC = @UIC@
UPNP_CFLAGS = @UPNP_CFLAGS@
UPNP_LIBS = @UPNP_LIBS@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
VERSION_EXTRA = @VERSION_EXTRA@
VERSION_EXTRA_RC = @VERSION_EXTRA_RC@
VERSION_MAJOR = @VERSION_MAJOR@
VERSION_MESSAGE = @VERSION_MESSAGE@
VERSION_MINOR = @VERSION_MINOR@
VERSION_REVISION = @VERSION_REVISION@
VLC_CONFIG = @VLC_CONFIG@
VORBIS_CFLAGS = @VORBIS_CFLAGS@
VORBIS_LIBS = @VORBIS_LIBS@
WIDL = @WIDL@
WINDRES = @WINDRES@
WINE_SDK_PATH = @WINE_SDK_PATH@
X264_CFLAGS = @X264_CFLAGS@
X264_LIBS = @X264_LIBS@
XCB_CFLAGS = @XCB_CFLAGS@
XCB_KEYSYMS_CFLAGS = @XCB_KEYSYMS_CFLAGS@
XCB_KEYSYMS_LIBS = @XCB_KEYSYMS_LIBS@
XCB_LIBS = @XCB_LIBS@
XCB_RANDR_CFLAGS = @XCB_RANDR_CFLAGS@
XCB_RANDR_LIBS = @XCB_RANDR_LIBS@
XCB_SHM_CFLAGS = @XCB_SHM_CFLAGS@
XCB_SHM_LIBS = @XCB_SHM_LIBS@
XCB_XV_CFLAGS = @XCB_XV_CFLAGS@
XCB_XV_LIBS = @XCB_XV_LIBS@
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
XLIB_XCB_CFLAGS = @XLIB_XCB_CFLAGS@
XLIB_XCB_LIBS = @XLIB_XCB_LIBS@
XMKMF = @XMKMF@
XPM_CFLAGS = @XPM_CFLAGS@
XPM_LIBS = @XPM_LIBS@
XPROTO_CFLAGS = @XPROTO_CFLAGS@
XPROTO_LIBS = @XPROTO_LIBS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ZVBI_CFLAGS = @ZVBI_CFLAGS@
ZVBI_LIBS = @ZVBI_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_OBJC = @ac_ct_OBJC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
soliddatadir = @soliddatadir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
vlcdatadir = @vlcdatadir@
vlclibdir = @vlclibdir@

# SUBDIRS stores the directories where a "make" is required when building
# something. DIST_SUBDIRS stores the directories where nothing is built but
# which have makefiles with distribution information.
#  - src (libvlc) is nedeed by modules, mozilla and bindings
#  - libs/* are needed by modules
BASE_SUBDIRS = po compat src bin modules share doc test
EXTRA_SUBDIRS = m4 extras/package/ipkg \
	libs/loader libs/srtp libs/unzip \
	projects/mozilla projects/activex

DIST_SUBDIRS = $(BASE_SUBDIRS) $(EXTRA_SUBDIRS)
SUBDIRS = po compat src $(am__append_1) $(am__append_2) \
	$(am__append_3) $(am__append_4) modules share doc test \
	$(am__append_5) $(am__append_6)

###############################################################################
# MacOS X project
###############################################################################

###############################################################################
# Various utilities ( editor syntax files, D-Bus controller ... )
##############################################################################
EXTRA_DIST = HACKING INSTALL.win32 INSTALL.wince \
	extras/package/win32/vlc.exe.manifest \
	extras/package/win32/libvlc.dll.manifest \
	extras/package/macosx/README.MacOSX.rtf vlc-config.in.in \
	extras/package/rpm/vlc.fedora.spec \
	extras/package/rpm/vlc.altlinux.spec \
	extras/package/win32/vlc.win32.nsi.in \
	extras/package/win32/spad.nsi.in extras/package/win32/UAC.nsh \
	extras/package/win32/UAC.dll \
	extras/package/win32/languages/declaration.nsh \
	extras/package/win32/languages/bengali.nsh \
	extras/package/win32/languages/brazilian_portuguese.nsh \
	extras/package/win32/languages/bulgarian.nsh \
	extras/package/win32/languages/catalan.nsh \
	extras/package/win32/languages/danish.nsh \
	extras/package/win32/languages/dutch.nsh \
	extras/package/win32/languages/english.nsh \
	extras/package/win32/languages/estonian.nsh \
	extras/package/win32/languages/finnish.nsh \
	extras/package/win32/languages/french.nsh \
	extras/package/win32/languages/german.nsh \
	extras/package/win32/languages/hungarian.nsh \
	extras/package/win32/languages/italian.nsh \
	extras/package/win32/languages/japanese.nsh \
	extras/package/win32/languages/occitan.nsh \
	extras/package/win32/languages/polish.nsh \
	extras/package/win32/languages/punjabi.nsh \
	extras/package/win32/languages/romanian.nsh \
	extras/package/win32/languages/schinese.nsh \
	extras/package/win32/languages/slovak.nsh \
	extras/package/win32/languages/slovenian.nsh \
	extras/package/win32/languages/sorani.nsh \
	extras/package/win32/languages/spanish.nsh \
	extras/package/macosx/Resources/English.lproj/MainMenu.nib/designable.nib \
	extras/package/macosx/Resources/English.lproj/MainMenu.nib/keyedobjects.nib \
	extras/package/macosx/Resources/English.lproj/MediaInfo.nib/designable.nib \
	extras/package/macosx/Resources/English.lproj/MediaInfo.nib/keyedobjects.nib \
	extras/package/macosx/Resources/English.lproj/About.nib/designable.nib \
	extras/package/macosx/Resources/English.lproj/About.nib/keyedobjects.nib \
	extras/package/macosx/Resources/English.lproj/Open.nib/designable.nib \
	extras/package/macosx/Resources/English.lproj/Open.nib/keyedobjects.nib \
	extras/package/macosx/Resources/English.lproj/Preferences.nib/designable.nib \
	extras/package/macosx/Resources/English.lproj/Preferences.nib/keyedobjects.nib \
	extras/package/macosx/Resources/English.lproj/Wizard.nib/designable.nib \
	extras/package/macosx/Resources/English.lproj/Wizard.nib/keyedobjects.nib \
	extras/package/macosx/Resources/English.lproj/Bookmarks.nib/designable.nib \
	extras/package/macosx/Resources/English.lproj/Bookmarks.nib/keyedobjects.nib \
	extras/package/macosx/Resources/English.lproj/Extended.nib/designable.nib \
	extras/package/macosx/Resources/English.lproj/Extended.nib/keyedobjects.nib \
	extras/package/macosx/Resources/English.lproj/CoreDialogs.nib/designable.nib \
	extras/package/macosx/Resources/English.lproj/CoreDialogs.nib/keyedobjects.nib \
	extras/package/macosx/Resources/English.lproj/ErrorPanel.nib/designable.nib \
	extras/package/macosx/Resources/English.lproj/ErrorPanel.nib/keyedobjects.nib \
	extras/package/macosx/Resources/English.lproj/InfoPlist.strings.in \
	extras/package/macosx/Resources/dsa_pub.pem \
	extras/package/macosx/Resources/aiff.icns \
	extras/package/macosx/Resources/audio.icns \
	extras/package/macosx/Resources/avi.icns \
	extras/package/macosx/Resources/flv.icns \
	extras/package/macosx/Resources/generic.icns \
	extras/package/macosx/Resources/m4a.icns \
	extras/package/macosx/Resources/m4v.icns \
	extras/package/macosx/Resources/mkv.icns \
	extras/package/macosx/Resources/mov.icns \
	extras/package/macosx/Resources/movie.icns \
	extras/package/macosx/Resources/mp3.icns \
	extras/package/macosx/Resources/mpeg.icns \
	extras/package/macosx/Resources/ogg.icns \
	extras/package/macosx/Resources/playlist.icns \
	extras/package/macosx/Resources/rm.icns \
	extras/package/macosx/Resources/subtitle.icns \
	extras/package/macosx/Resources/vob.icns \
	extras/package/macosx/Resources/wav.icns \
	extras/package/macosx/Resources/vlc.icns \
	extras/package/macosx/Resources/wma.icns \
	extras/package/macosx/Resources/wmv.icns \
	extras/package/macosx/Resources/pause.png \
	extras/package/macosx/Resources/pause_blue.png \
	extras/package/macosx/Resources/play.png \
	extras/package/macosx/Resources/play_blue.png \
	extras/package/macosx/Resources/stop.png \
	extras/package/macosx/Resources/stop_blue.png \
	extras/package/macosx/Resources/display_left.png \
	extras/package/macosx/Resources/display_middle.png \
	extras/package/macosx/Resources/display_right.png \
	extras/package/macosx/Resources/display_slider.png \
	extras/package/macosx/Resources/display_track.png \
	extras/package/macosx/Resources/equalizerdrawer_active.png \
	extras/package/macosx/Resources/equalizerdrawer_blue.png \
	extras/package/macosx/Resources/fullscreen_active.png \
	extras/package/macosx/Resources/fullscreen_blue.png \
	extras/package/macosx/Resources/next_active.png \
	extras/package/macosx/Resources/next_blue.png \
	extras/package/macosx/Resources/playlistdrawer_active.png \
	extras/package/macosx/Resources/playlistdrawer_blue.png \
	extras/package/macosx/Resources/previous_active.png \
	extras/package/macosx/Resources/previous_blue.png \
	extras/package/macosx/Resources/skip_forward_active.png \
	extras/package/macosx/Resources/skip_forward_blue.png \
	extras/package/macosx/Resources/skip_previous_active.png \
	extras/package/macosx/Resources/skip_previous_blue.png \
	extras/package/macosx/Resources/volume_high.png \
	extras/package/macosx/Resources/volume_low.png \
	extras/package/macosx/Resources/volumeslider_blue.png \
	extras/package/macosx/Resources/volumeslider_normal.png \
	extras/package/macosx/Resources/volumetrack.png \
	extras/package/macosx/Resources/about_bg.png \
	extras/package/macosx/Resources/skip_forward_active_embedded.png \
	extras/package/macosx/Resources/play_embedded.png \
	extras/package/macosx/Resources/pause_embedded.png \
	extras/package/macosx/Resources/skip_previous_active_embedded.png \
	extras/package/macosx/Resources/pause_embedded_blue.png \
	extras/package/macosx/Resources/play_embedded_blue.png \
	extras/package/macosx/Resources/skip_forward_embedded_blue.png \
	extras/package/macosx/Resources/skip_previous_embedded_blue.png \
	extras/package/macosx/Resources/vlc.scriptSuite \
	extras/package/macosx/Resources/vlc.scriptTerminology \
	extras/package/macosx/Resources/README \
	extras/package/macosx/Resources/add_embedded.png \
	extras/package/macosx/Resources/add_embedded_blue.png \
	extras/package/macosx/Resources/repeat_embedded.png \
	extras/package/macosx/Resources/repeat_embedded_blue.png \
	extras/package/macosx/Resources/repeat_single_embedded_blue.png \
	extras/package/macosx/Resources/shuffle_embedded.png \
	extras/package/macosx/Resources/shuffle_embedded_blue.png \
	extras/package/macosx/Resources/fs_volume_slider_knob_highlight.png \
	extras/package/macosx/Resources/fs_volume_slider_knob.png \
	extras/package/macosx/Resources/fs_volume_slider_bar.png \
	extras/package/macosx/Resources/fs_volume_mute_highlight.png \
	extras/package/macosx/Resources/fs_volume_mute.png \
	extras/package/macosx/Resources/fs_volume_max_highlight.png \
	extras/package/macosx/Resources/fs_volume_max.png \
	extras/package/macosx/Resources/fs_time_slider_knob_highlight.png \
	extras/package/macosx/Resources/fs_time_slider_knob.png \
	extras/package/macosx/Resources/fs_time_slider.png \
	extras/package/macosx/Resources/fs_stop_highlight.png \
	extras/package/macosx/Resources/fs_stop.png \
	extras/package/macosx/Resources/fs_skip_previous_highlight.png \
	extras/package/macosx/Resources/fs_skip_previous.png \
	extras/package/macosx/Resources/fs_skip_next_highlight.png \
	extras/package/macosx/Resources/fs_skip_next.png \
	extras/package/macosx/Resources/fs_rewind_highlight.png \
	extras/package/macosx/Resources/fs_rewind.png \
	extras/package/macosx/Resources/fs_play_highlight.png \
	extras/package/macosx/Resources/fs_play.png \
	extras/package/macosx/Resources/fs_pause_highlight.png \
	extras/package/macosx/Resources/fs_pause.png \
	extras/package/macosx/Resources/fs_forward_highlight.png \
	extras/package/macosx/Resources/fs_forward.png \
	extras/package/macosx/Resources/fs_exit_fullscreen_highlight.png \
	extras/package/macosx/Resources/fs_exit_fullscreen.png \
	extras/package/macosx/Resources/fs_background.png \
	extras/package/macosx/Resources/add_embedded_graphite.png \
	extras/package/macosx/Resources/equalizerdrawer_graphite.png \
	extras/package/macosx/Resources/fullscreen_graphite.png \
	extras/package/macosx/Resources/next_graphite.png \
	extras/package/macosx/Resources/pause_embedded_graphite.png \
	extras/package/macosx/Resources/pause_graphite.png \
	extras/package/macosx/Resources/play_embedded_graphite.png \
	extras/package/macosx/Resources/play_graphite.png \
	extras/package/macosx/Resources/playlistdrawer_graphite.png \
	extras/package/macosx/Resources/previous_graphite.png \
	extras/package/macosx/Resources/repeat_embedded_graphite.png \
	extras/package/macosx/Resources/repeat_single_embedded_graphite.png \
	extras/package/macosx/Resources/shuffle_embedded_graphite.png \
	extras/package/macosx/Resources/skip_forward_embedded_graphite.png \
	extras/package/macosx/Resources/skip_forward_graphite.png \
	extras/package/macosx/Resources/skip_previous_embedded_graphite.png \
	extras/package/macosx/Resources/skip_previous_graphite.png \
	extras/package/macosx/Resources/stop_graphite.png \
	extras/package/macosx/Resources/volumeslider_graphite.png \
	extras/package/macosx/Resources/backward_big_down.png \
	extras/package/macosx/Resources/backward_big.png \
	extras/package/macosx/Resources/eq_sm.pdf \
	extras/package/macosx/Resources/forward_big_down.png \
	extras/package/macosx/Resources/forward_big.png \
	extras/package/macosx/Resources/fs_sm.pdf \
	extras/package/macosx/Resources/list_sm.pdf \
	extras/package/macosx/Resources/next_sm.pdf \
	extras/package/macosx/Resources/pause_big_down.png \
	extras/package/macosx/Resources/pause_big.png \
	extras/package/macosx/Resources/play_big_down.png \
	extras/package/macosx/Resources/play_big.png \
	extras/package/macosx/Resources/prev_sm.pdf \
	extras/package/macosx/Resources/sidebarAdd.png \
	extras/package/macosx/Resources/sidebarRepeat.png \
	extras/package/macosx/Resources/sidebarRepeatOn.png \
	extras/package/macosx/Resources/sidebarRepeatOneOn.png \
	extras/package/macosx/Resources/sidebarResizeWidget.png \
	extras/package/macosx/Resources/sidebarShuffle.png \
	extras/package/macosx/Resources/sidebarShuffleOn.png \
	extras/package/macosx/Resources/sidebarStatusAreaBackground.png \
	extras/package/macosx/Resources/stop_sm.pdf \
	extras/package/macosx/Resources/noart.png \
	extras/package/macosx/Resources/spref_cone_Audio_64.png \
	extras/package/macosx/Resources/spref_cone_Hotkeys_64.png \
	extras/package/macosx/Resources/spref_cone_Input_64.png \
	extras/package/macosx/Resources/spref_cone_Interface_64.png \
	extras/package/macosx/Resources/spref_cone_Subtitles_64.png \
	extras/package/macosx/Resources/spref_cone_Video_64.png \
	extras/package/macosx/fullscreen_panel.svg \
	extras/package/macosx/ub.sh \
	extras/package/macosx/vlc.xcodeproj/project.pbxproj \
	extras/package/macosx/Delete_Preferences.app/Contents/Info.plist \
	extras/package/macosx/Delete_Preferences.app/Contents/PkgInfo \
	extras/package/macosx/Delete_Preferences.app/Contents/MacOS/applet \
	extras/package/macosx/Delete_Preferences.app/Contents/Resources/description.rtfd/TXT.rtf \
	extras/package/macosx/Delete_Preferences.app/Contents/Resources/applet.icns \
	extras/package/macosx/Delete_Preferences.app/Contents/Resources/applet.rsrc \
	extras/package/macosx/Delete_Preferences.app/Contents/Resources/Scripts/main.scpt \
	extras/package/macosx/plugin/Info.plist.in \
	extras/package/macosx/plugin/InstallerInfo.plist.in \
	extras/package/macosx/plugin/InstallerDescription.plist \
	extras/package/macosx/plugin/pbdevelopment.plist \
	extras/package/macosx/eyetvplugin/EyeTVPluginDefs.h \
	extras/package/macosx/eyetvplugin/Info.plist \
	extras/package/macosx/eyetvplugin/eyetvplugin.c \
	extras/package/macosx/eyetvplugin/eyetvplugin.h \
	extras/package/macosx/eyetvplugin/English.lproj/InfoPlist.strings \
	extras/package/macosx/eyetvplugin/eyetvplugin.xcodeproj/project.pbxproj \
	extras/package/macosx/README.MacOSX.rtf \
	extras/package/macosx/Info.plist.in \
	extras/analyser/zsh_completion.sh extras/analyser/zsh.cpp \
	extras/analyser/emacs.init extras/analyser/vlc.vim \
	extras/analyser/valgrind.suppressions \
	extras/buildsystem/make.pl extras/misc/mpris.py \
	extras/misc/mpris.glade
dist_noinst_SCRIPTS = bootstrap toolbox make-alias
nodist_noinst_SCRIPTS = compile
BUILT_SOURCES_distclean = vlc-config extras/package/win32/vlc.win32.nsi extras/package/win32/spad.nsi
@HAVE_DARWIN_FALSE@BUILT_SOURCES_clean = 
@HAVE_DARWIN_TRUE@BUILT_SOURCES_clean = macosx-sdk
BUILT_SOURCES = $(BUILT_SOURCES_distclean) $(BUILT_SOURCES_clean)
SUFFIXES = 
DISTCHECK_CONFIGURE_FLAGS = \
	--enable-fast-install \
	--disable-a52 \
	--disable-avcodec --disable-avformat \
	--disable-postproc --disable-swscale \
	--disable-dbus \
	--disable-mad --disable-libmpeg2 \
	--disable-faad --disable-skins2 \
	--disable-live555 \
	--disable-fribidi --disable-glx \
	--with-kde-solid='$(datadir)/kde4/apps'

ACLOCAL_AMFLAGS = -I m4
AUTOMAKE_OPTIONS = \
	1.9 \
	-Wall \
	check-news \
	dist-bzip2 \
	no-dist-gzip


###############################################################################
# Building libvlc
###############################################################################
noinst_SCRIPTS = vlc-config $(am__append_7)
CLEANFILES = $(BUILT_SOURCES_clean) $(ALIASES) $(noinst_SCRIPTS)
DISTCLEANFILES = $(BUILT_SOURCES_distclean) vlc-config.in compile
MAINTAINERCLEANFILES = ChangeLog

# Create the MacOS X app
@BUILD_MACOSX_VLC_APP_TRUE@@HAVE_DARWIN_TRUE@noinst_DATA = VLC.app
@HAVE_BEOS_TRUE@noinst_DATA = vlc-bundle

###############################################################################
# Building aliases
###############################################################################
ALL_ALIASES = cvlc rvlc svlc qvlc nvlc mvlc
bin_SCRIPTS = $(ALIASES)
EXTRA_SCRIPTS = $(ALL_ALIASES)
MKALIAS = bindir="$(bindir)" transform="$(transform)" program_prefix="$(program_prefix)" program_suffix="$(program_suffix)" $(top_srcdir)/make-alias $@
silentstd = $(silentstd_$(V))
silentstd_ = $(silentstd_$(AM_DEFAULT_VERBOSITY))
silentstd_0 = 2>&1 >/dev/null

###############################################################################
# Building architecture-specific binary packages
###############################################################################

# XXX: this rule is probably only useful to you if you have exactly
# the same setup as the maintaner(s).
#

############################################################################
############################################################################
win32_destdir = $(top_builddir)/vlc-$(VERSION)
win32_xpi_destdir = $(win32_destdir)/vlc-plugin
win32_debugdir = $(top_builddir)/symbols-$(VERSION)
npvlc = vlc-$(VERSION)/mozilla/npvlc$(LIBEXT)
axvlc = vlc-$(VERSION)/activex/axvlc$(LIBEXT)
win32_lua_destdir = $(win32_destdir)/lua
win32_http_destdir = $(win32_destdir)/http
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: 
am--refresh:
	@:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
extras/package/win32/spad.nsi: $(top_builddir)/config.status $(top_srcdir)/extras/package/win32/spad.nsi.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
extras/package/win32/vlc.win32.nsi: $(top_builddir)/config.status $(top_srcdir)/extras/package/win32/vlc.win32.nsi.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
extras/package/macosx/Info.plist: $(top_builddir)/config.status $(top_srcdir)/extras/package/macosx/Info.plist.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
extras/package/macosx/Resources/English.lproj/InfoPlist.strings: $(top_builddir)/config.status $(top_srcdir)/extras/package/macosx/Resources/English.lproj/InfoPlist.strings.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
extras/package/macosx/plugin/Info.plist: $(top_builddir)/config.status $(top_srcdir)/extras/package/macosx/plugin/Info.plist.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
extras/package/macosx/plugin/InstallerInfo.plist: $(top_builddir)/config.status $(top_srcdir)/extras/package/macosx/plugin/InstallerInfo.plist.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@case `sed 15q $(srcdir)/NEWS` in \
	*"$(VERSION)"*) : ;; \
	*) \
	  echo "NEWS not updated; not releasing" 1>&2; \
	  exit 1;; \
	esac
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)
dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(SCRIPTS) $(DATA) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-hdr \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binSCRIPTS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binSCRIPTS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check \
	ctags-recursive install install-am install-strip \
	tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am am--refresh check check-am clean clean-generic \
	clean-libtool ctags ctags-recursive dist dist-all dist-bzip2 \
	dist-gzip dist-hook dist-lzma dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binSCRIPTS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binSCRIPTS

#	std-options

ChangeLog: Makefile.am
	rm -f -- "$@"
	cd doc && $(MAKE) $(AM_MAKEFLAGS) changelogs
	ln -sf doc/ChangeLog-2009 "$@"

dist-hook:
	distdir=$(distdir) srcdir=$(srcdir) $(SHELL) $(srcdir)/toolbox --dist-contrib
vlc-config: $(top_builddir)/config.status $(top_builddir)/vlc-config.in
	$(SHELL) ./config.status --file=$@
	chmod 0755 $@
	touch $@

vlc-config.in: vlc-config.in.in
	./config.status --recheck
	touch $@

# Shortcut for developers to rebuild the core (libvlc + vlc)
# Don't use it if you don't know what it is about.
# Don't complain if it doesn't work. -- Courmisch
libcompat:
	cd compat && $(MAKE) $(AM_MAKEFLAGS)

libvlc: libcompat
	cd src && $(MAKE) $(AM_MAKEFLAGS) libvlc.la

core: libvlc vlc
	cd bin && $(MAKE) $(AM_MAKEFLAGS) vlc$(EXEEXT) vlc-static$(EXEEXT)

doc:
	cd doc && $(MAKE) $(AM_MAKEFLAGS) doc

.PHONY: libvlc core doc
@HAVE_BEOS_TRUE@vlc-bundle: vlc
@HAVE_BEOS_TRUE@	rm -Rf $(top_builddir)/vlc-bundle ; mkdir -p $(top_builddir)/vlc-bundle
@HAVE_BEOS_TRUE@	cp $(top_builddir)/vlc $(top_builddir)/vlc-bundle/
@HAVE_BEOS_TRUE@	xres -o $(top_builddir)/vlc-bundle/vlc $(srcdir)/share/vlc_beos.rsrc
@HAVE_BEOS_TRUE@	for i in "" `$(VLC_CONFIG) --target plugin` ; do \
@HAVE_BEOS_TRUE@	  if test -n "$$i" ; then \
@HAVE_BEOS_TRUE@	    mkdir -p $(top_builddir)/vlc-bundle/plugins ; \
@HAVE_BEOS_TRUE@	    cp "$$i$(LIBEXT)" $(top_builddir)/vlc-bundle/plugins/ ; \
@HAVE_BEOS_TRUE@	  fi ; \
@HAVE_BEOS_TRUE@	done
@HAVE_BEOS_TRUE@	if test -d $(CONTRIB_DIR)/vlc-lib ; then \
@HAVE_BEOS_TRUE@	  mkdir -p $(top_builddir)/vlc-bundle/lib ; \
@HAVE_BEOS_TRUE@	  for i in $(CONTRIB_DIR)/vlc-lib/*.so ; do \
@HAVE_BEOS_TRUE@	    cp $$i $(top_builddir)/vlc-bundle/lib/ ; \
@HAVE_BEOS_TRUE@	  done ; \
@HAVE_BEOS_TRUE@	fi
@HAVE_BEOS_TRUE@	cat $(top_srcdir)/po/LINGUAS | while read i; do \
@HAVE_BEOS_TRUE@	  mkdir -p "$(top_builddir)/vlc-bundle/share/locale/$$i/LC_MESSAGES" ; \
@HAVE_BEOS_TRUE@	  cp "$(top_builddir)/po/$$i.gmo" \
@HAVE_BEOS_TRUE@	    "$(top_builddir)/vlc-bundle/share/locale/$$i/LC_MESSAGES/vlc.mo" || true ; \
@HAVE_BEOS_TRUE@	done
@HAVE_BEOS_TRUE@	find $(top_builddir)/vlc-bundle -type f -exec mimeset -f "{}" \;

cvlc: make-alias Makefile
	$(AM_V_GEN)$(MKALIAS) dummy

rvlc: make-alias Makefile
	$(AM_V_GEN)$(MKALIAS) rc

svlc: make-alias Makefile
	$(AM_V_GEN)$(MKALIAS) skins2

qvlc: make-alias Makefile
	$(AM_V_GEN)$(MKALIAS) qt4

nvlc: make-alias Makefile
	$(AM_V_GEN)$(MKALIAS) ncurses

mvlc: make-alias Makefile
	$(AM_V_GEN)$(MKALIAS) maemo

vlc$(EXEEXT):
	$(AM_V_GEN)ln -sf bin/vlc-static$(EXEEXT) vlc$(EXEEXT)

# VLC-release.app for packaging and giving it to your friends
# use package-macosx to get a nice dmg
VLC-release.app: vlc
	( cd src && $(MAKE) $(AM_MAKEFLAGS) install $(silentstd) )
	rm -Rf "$(top_builddir)/tmp"
	mkdir -p "$(top_builddir)/tmp/extras/package/macosx"
	rm -Rf $(top_builddir)/VLC-release.app
	for i in vlc.xcodeproj Resources README.MacOSX.rtf ; do \
	  cp -R $(srcdir)/extras/package/macosx/$$i $(top_builddir)/tmp/extras/package/macosx/; \
	done
	REVISION=`(git --git-dir=$(srcdir)/.git describe --always || echo exported)` && \
	cat $(top_builddir)/extras/package/macosx/Info.plist | \
	sed "s/#REVISION#/$$REVISION/g" > $(top_builddir)/tmp/extras/package/macosx/Info.plist
	cp -R $(top_builddir)/extras/package/macosx/Resources $(top_builddir)/tmp/extras/package/macosx/
	for i in AUTHORS COPYING THANKS; do \
	  cp "$(srcdir)/$$i" $(top_builddir)/tmp; \
	done
	mkdir -p $(top_builddir)/tmp/extras/contrib/Sparkle
	cp -R $(CONTRIB_DIR)/Sparkle/Sparkle.framework $(top_builddir)/tmp/extras/contrib/Sparkle
	mkdir -p $(top_builddir)/tmp/modules/audio_output
	mkdir -p $(top_builddir)/tmp/modules/gui/macosx
	for i in \
	    AppleRemote.h \
	    AppleRemote.m \
	    about.h \
	    about.m \
	    applescript.h \
	    applescript.m \
	    controls.h \
	    controls.m \
	    equalizer.h \
	    equalizer.m \
	    intf.h \
	    intf.m \
	    macosx.m \
	    misc.h \
	    misc.m \
	    open.h \
	    open.m \
	    output.h \
	    output.m \
	    playlist.h \
	    playlist.m \
	    playlistinfo.h \
	    playlistinfo.m \
	    prefs_widgets.h \
	    prefs_widgets.m \
	    prefs.h \
	    prefs.m \
	    simple_prefs.h \
	    simple_prefs.m \
	    vout.h \
	    voutgl.m \
	    wizard.h \
	    wizard.m \
	    extended.h \
	    extended.m \
	    bookmarks.h \
	    bookmarks.m \
	    coredialogs.h \
	    coredialogs.m \
	    embeddedwindow.h \
	    embeddedwindow.m \
	    fspanel.h \
	    fspanel.m \
	    vout.m; do \
	  cp "$(srcdir)/modules/gui/macosx/$$i" \
             $(top_builddir)/tmp/modules/gui/macosx; \
	done
	$(AM_V_GEN)cd $(top_builddir)/tmp/extras/package/macosx && \
        xcodebuild -target vlc SYMROOT=../../../build $(silentstd) && \
	cd ../../../../ && \
	cp -R $(top_builddir)/tmp/build/Default/VLC.bundle $(top_builddir)/VLC-release.app; \
	rm -Rf $(top_builddir)/tmp
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS
	PRODUCT="VLC-release.app" ACTION="release-makefile" src_dir=$(srcdir) build_dir=$(top_builddir) sh $(srcdir)/projects/macosx/framework/Pre-Compile.sh
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua
	for i in $(srcdir)/share/lua/*.* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/`basename $${i}` ; \
	done ; \
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/playlist
	for i in $(srcdir)/share/lua/playlist/*.* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/playlist/`basename $${i}` ; \
	done ; \
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/meta
	for i in $(srcdir)/share/lua/meta/*.* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/meta/`basename $${i}` ; \
	done ; \
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/intf
	for i in $(srcdir)/share/lua/intf/*.* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/intf/`basename $${i}` ; \
	done ; \
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/intf/modules
	for i in $(srcdir)/share/lua/intf/modules/*.* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/intf/modules/`basename $${i}` ; \
	done ; \
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/http/dialogs
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/http/js
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/http/images
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/http/requests
	$(INSTALL) -m 644 $(srcdir)/share/lua/http/.hosts $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/http/.hosts
	for i in $(srcdir)/share/lua/http/*.* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/http/`basename $${i}` ; \
	done
	for i in $(srcdir)/share/lua/http/dialogs/* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/http/dialogs/`basename $${i}` ; \
	done
	for i in $(srcdir)/share/lua/http/js/*.* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/http/js/`basename $${i}` ; \
	done
	for i in $(srcdir)/share/lua/http/images/*.* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/http/images/`basename $${i}` ; \
	done
	for i in $(srcdir)/share/lua/http/requests/*.* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/http/requests/`basename $${i}` ; \
	done
	$(INSTALL) -m 644 $(srcdir)/share/lua/http/requests/readme $(top_builddir)/VLC-release.app/Contents/MacOS/share/lua/http/requests/readme.txt
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/http/dialogs
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/http/js
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/http/images
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/http/requests
	$(INSTALL) -m 644 $(srcdir)/share/http/.hosts $(top_builddir)/VLC-release.app/Contents/MacOS/share/http/.hosts
	for i in $(srcdir)/share/http/*.* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/http/`basename $${i}` ; \
	done
	for i in $(srcdir)/share/http/dialogs/* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/http/dialogs/`basename $${i}` ; \
	done
	for i in $(srcdir)/share/http/js/*.* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/http/js/`basename $${i}` ; \
	done
	for i in $(srcdir)/share/http/images/*.* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/http/images/`basename $${i}` ; \
	done
	for i in $(srcdir)/share/http/requests/*.* ; do \
	  $(INSTALL) -m 644 $${i} $(top_builddir)/VLC-release.app/Contents/MacOS/share/http/requests/`basename $${i}` ; \
	done
	$(INSTALL) -m 644 $(srcdir)/share/http/requests/readme $(top_builddir)/VLC-release.app/Contents/MacOS/share/http/requests/readme.txt
	$(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/locale
	cat $(top_srcdir)/po/LINGUAS | while read i; do \
	  $(INSTALL) -d $(top_builddir)/VLC-release.app/Contents/MacOS/share/locale/$${i}/LC_MESSAGES ; \
	  $(INSTALL) $(srcdir)/po/$${i}.gmo $(top_builddir)/VLC-release.app/Contents/MacOS/share/locale/$${i}/LC_MESSAGES/vlc.mo || true ; \
	  mkdir -p $(top_builddir)/VLC-release.app/Contents/Resources/$${i}.lproj ; \
	  ln -sf ../English.lproj/InfoPlist.strings \
	      $(top_builddir)/VLC-release.app/Contents/Resources/$${i}.lproj ; \
	  ln -sf ../English.lproj/MainMenu.nib \
	      $(top_builddir)/VLC-release.app/Contents/Resources/$${i}.lproj ; \
	done
	printf "APPLVLC#" >| $(top_builddir)/VLC-release.app/Contents/PkgInfo
	find $(top_builddir)/VLC-release.app/Contents/Resources/English.lproj -name designable.nib -delete;
	find $(top_builddir)/VLC-release.app -type d -exec chmod ugo+rx '{}' \;
	find $(top_builddir)/VLC-release.app -type f -exec chmod ugo+r '{}' \;

# This is just for development purposes. 
# The resulting VLC.app will only run in this tree.
VLC.app: vlc $(top_builddir)/src/.libs/libvlccore.dylib $(top_builddir)/src/.libs/libvlc.dylib
	$(AM_V_GEN)(cd src && make install $(silentstd))
	rm -Rf $(top_builddir)/tmp
	mkdir -p "$(top_builddir)/tmp/extras/package/macosx"
	rm -Rf $(top_builddir)/VLC.app
	for i in vlc.xcodeproj Resources README.MacOSX.rtf; do \
	  cp -R $(srcdir)/extras/package/macosx/$$i $(top_builddir)/tmp/extras/package/macosx/; \
	done
	REVISION=`(git --git-dir=$(srcdir)/.git describe --always || echo exported)` && \
	cat $(top_builddir)/extras/package/macosx/Info.plist | \
	sed "s/#REVISION#/$$REVISION/g" > $(top_builddir)/tmp/extras/package/macosx/Info.plist
	cp -R $(top_builddir)/extras/package/macosx/Resources $(top_builddir)/tmp/extras/package/macosx/
	for i in AUTHORS COPYING THANKS; do \
	  cp "$(srcdir)/$$i" $(top_builddir)/tmp; \
	done
	mkdir -p $(top_builddir)/tmp/extras/contrib/Sparkle
	cp -R $(CONTRIB_DIR)/Sparkle/Sparkle.framework $(top_builddir)/tmp/extras/contrib/Sparkle
	mkdir -p $(top_builddir)/tmp/modules/audio_output
	mkdir -p $(top_builddir)/tmp/modules/gui/macosx
	for i in \
	    AppleRemote.h \
	    AppleRemote.m \
	    about.h \
	    about.m \
	    applescript.h \
	    applescript.m \
	    controls.h \
	    controls.m \
	    equalizer.h \
	    equalizer.m \
	    intf.h \
	    intf.m \
	    macosx.m \
	    misc.h \
	    misc.m \
	    open.h \
	    open.m \
	    output.h \
	    output.m \
	    playlist.h \
	    playlist.m \
	    playlistinfo.h \
	    playlistinfo.m \
	    prefs_widgets.h \
	    prefs_widgets.m \
	    prefs.h \
	    prefs.m \
	    simple_prefs.h \
	    simple_prefs.m \
	    vout.h \
	    voutgl.m \
	    wizard.h \
	    wizard.m \
	    extended.h \
	    extended.m \
	    bookmarks.h \
	    bookmarks.m \
	    coredialogs.h \
	    coredialogs.m \
	    embeddedwindow.h \
	    embeddedwindow.m \
	    fspanel.h \
	    fspanel.m \
	    vout.m; do \
	  cp "$(srcdir)/modules/gui/macosx/$$i" \
             $(top_builddir)/tmp/modules/gui/macosx; \
	done
	$(AM_V_GEN)cd $(top_builddir)/tmp/extras/package/macosx && \
	xcodebuild -target vlc SYMROOT=../../../build $(silentstd) && \
	cd ../../../../ && \
	cp -R $(top_builddir)/tmp/build/Default/VLC.bundle $(top_builddir)/VLC.app
	$(INSTALL) -d $(top_builddir)/VLC.app/Contents/MacOS
	touch $(top_builddir)/VLC.app/Contents/MacOS/VLC
	chmod +x $(top_builddir)/VLC.app/Contents/MacOS/VLC
	$(INSTALL) $(top_builddir)/bin/.libs/vlc $(top_builddir)/VLC.app/Contents/MacOS/VLC
	ln -sf ../../../modules $(top_builddir)/VLC.app/Contents/MacOS/plugins
	install -d $(top_builddir)/VLC.app/Contents/MacOS/share
	for i in `ls $(srcdir)/share`; do \
	   ln -sf `pwd`/$(srcdir)/share/$$i $(top_builddir)/VLC.app/Contents/MacOS/share/; \
	done
	$(INSTALL) -d $(top_builddir)/VLC.app/Contents/MacOS/share/locale
	cat $(top_srcdir)/po/LINGUAS | while read i; do \
	  mkdir -p $(top_builddir)/VLC.app/Contents/MacOS/share/locale/$${i}/LC_MESSAGES ; \
	  ln -sfn `pwd`/$(srcdir)/po/$${i}.gmo $(top_builddir)/VLC.app/Contents/MacOS/share/locale/$${i}/LC_MESSAGES/vlc.mo || true ; \
	  mkdir -p $(top_builddir)/VLC.app/Contents/Resources/$${i}.lproj ; \
	  ln -sf ../English.lproj/InfoPlist.strings \
	      $(top_builddir)/VLC.app/Contents/Resources/$${i}.lproj ; \
	  ln -sf ../English.lproj/MainMenu.nib \
	      $(top_builddir)/VLC.app/Contents/Resources/$${i}.lproj ; \
	done
	printf "APPLVLC#" >| $(top_builddir)/VLC.app/Contents/PkgInfo

#Win-common if for win32 and wince
package-win-common:
# Check that tmp isn't in the way
	@if test -e "$(win32_destdir)"; then \
	  echo "Error: please remove $(win32_destdir), it is in the way"; \
	  false; \
	else \
	  echo "OK."; mkdir -p "$(win32_destdir)"; \
	fi
# Same for debug symbols dir
	@if test -e "$(win32_debugdir)"; then \
	  echo "Error: please remove $(win32_debugdir), it is in the way"; \
	  false; \
	else \
	  echo "OK."; mkdir -p "$(win32_debugdir)"; \
	fi

# Copy relevant files
# Copy executables, major libs+manifests
	cp "$(top_builddir)/bin/.libs/vlc$(EXEEXT)" "$(win32_destdir)/"
	cp "$(top_builddir)/bin/.libs/vlc-cache-gen$(EXEEXT)" "$(win32_destdir)/"
	cp "$(top_srcdir)/extras/package/win32/vlc.exe.manifest" "$(win32_destdir)/"
	cp "$(top_srcdir)/extras/package/win32/libvlc.dll.manifest" "$(win32_destdir)/"
	cp "$(top_builddir)/src/.libs/libvlccore$(LIBEXT)" "$(win32_destdir)/"
	cp "$(top_builddir)/src/.libs/libvlc$(LIBEXT)" "$(win32_destdir)/"

# Copy Text files
	for file in AUTHORS THANKS ; \
	  do sed 's/@/_AT_/' < "$(srcdir)/$$file" > "$(win32_destdir)/$${file}.txt" ; done;
	for file in NEWS COPYING README; \
	  do cp "$(srcdir)/$$file" "$(win32_destdir)/$${file}.txt"; done
	$(U2D) "$(win32_destdir)/"*.txt || echo "WARNING: this shouldn't happen"

# Necessary icons
	cp $(srcdir)/share/icons/vlc.ico $(win32_destdir)/

# Copy the locales
	mkdir -p $(win32_destdir)/locale
	cat $(top_srcdir)/po/LINGUAS | while read i; do \
	  mkdir -p "$(win32_destdir)/locale/$${i}/LC_MESSAGES" ; \
	  cp "$(srcdir)/po/$${i}.gmo" \
	    "$(win32_destdir)/locale/$${i}/LC_MESSAGES/vlc.mo" || true ; \
	done
	mkdir -p $(win32_destdir)/locale/qt4/
	cp $(QT4LOCALEDIR)/*.qm $(win32_destdir)/locale/qt4/ || true

#  Mozilla plugin
@BUILD_MOZILLA_TRUE@	mkdir -p "$(win32_destdir)/mozilla"
@BUILD_MOZILLA_TRUE@	cp $(top_builddir)/projects/mozilla/.libs/npvlc$(LIBEXT) $(win32_destdir)/mozilla/
@BUILD_MOZILLA_TRUE@	cp $(top_srcdir)/projects/mozilla/npvlc.dll.manifest $(win32_destdir)/mozilla/

# ActiveX plugin
@BUILD_ACTIVEX_TRUE@	mkdir -p "$(win32_destdir)/activex"
@BUILD_ACTIVEX_TRUE@	cp $(srcdir)/projects/activex/README.TXT  $(win32_destdir)/activex/
@BUILD_ACTIVEX_TRUE@	cp $(srcdir)/projects/activex/test.html  $(win32_destdir)/activex/
@BUILD_ACTIVEX_TRUE@	$(U2D) $(win32_destdir)/activex/*
@BUILD_ACTIVEX_TRUE@	cp $(top_builddir)/projects/activex/.libs/axvlc$(LIBEXT) $(win32_destdir)/activex/
@BUILD_ACTIVEX_TRUE@	cp $(top_srcdir)/projects/activex/axvlc.dll.manifest $(win32_destdir)/activex/

# Rebase all those DLLs to speed up loading (need cygwin rebase)
	if rebase -b 0x42 /dev/null >/dev/null 2>&1; then \
		find $(win32_destdir) -type f -name '*.dll' -print | rebase -b 0x70000000 -T -; \
	fi

# Copy the UAC NSIS plugin
	mkdir -p "$(win32_destdir)/NSIS"
	cp "$(top_srcdir)/extras/package/win32/UAC.nsh" "$(win32_destdir)/NSIS"
	cp "$(top_srcdir)/extras/package/win32/UAC.dll" "$(win32_destdir)/NSIS"

package-win32-xpi: package-win-common-strip
	mkdir -p "$(win32_xpi_destdir)/plugins"
	cp $(top_builddir)/projects/mozilla/install.rdf "$(win32_xpi_destdir)"
	cp $(win32_destdir)/mozilla/npvlc$(LIBEXT) \
		"$(win32_xpi_destdir)/plugins"
	cp $(top_srcdir)/projects/mozilla/npvlc.dll.manifest \
		"$(win32_xpi_destdir)/plugins"
	cp "$(top_srcdir)/extras/package/win32/libvlc.dll.manifest" \
		"$(win32_xpi_destdir)/plugins"
	cp "$(win32_destdir)/libvlccore$(LIBEXT)" \
		"$(win32_xpi_destdir)/plugins"
	cp "$(win32_destdir)/libvlc$(LIBEXT)" \
		"$(win32_xpi_destdir)/plugins"
	mkdir -p "$(win32_xpi_destdir)/plugins/plugins"
	cp $(win32_destdir)/plugins/*$(LIBEXT) \
		"$(win32_xpi_destdir)/plugins/plugins"
	rm -rf "$(win32_xpi_destdir)/plugins/plugins/*qt*"
	rm -rf "$(win32_xpi_destdir)/plugins/plugins/*skins*"
	cd $(win32_xpi_destdir) && zip -r vlc-$(VERSION).xpi install.rdf plugins

package-win32-base-debug: package-win-common
# Copy relevant files
# Script installer
	cp "$(top_builddir)/extras/package/win32/vlc.win32.nsi" "$(win32_destdir)/"
	cp "$(top_builddir)/extras/package/win32/spad.nsi" "$(win32_destdir)/"
	mkdir "$(win32_destdir)/languages"
	cp $(srcdir)/extras/package/win32/languages/*.nsh "$(win32_destdir)/languages/"

# Plugins
	mkdir -p "$(win32_destdir)/plugins"
	find modules/ -name '*_plugin$(LIBEXT)' | while read i; do \
	  if test -n "$$i" ; then \
	    $(INSTALL) "$$i" "vlc-$(VERSION)/plugins/" ; \
	  fi ; done

#Enable DEP and ASLR for all the binaries
@USE_PEFLAGS_TRUE@	find $(win32_destdir) -type f -name '*.dll' -print -o -name '*.exe' -print | while read i; do \
@USE_PEFLAGS_TRUE@	$(PEFLAGS) --dynamicbase=true --nxcompat=true "$$i" ; \
@USE_PEFLAGS_TRUE@	done

# Copy the lua scripts (HTTP)
@BUILD_LUA_TRUE@	mkdir -p "$(win32_lua_destdir)/http/images"
@BUILD_LUA_TRUE@	mkdir -p "$(win32_lua_destdir)/http/requests"
@BUILD_LUA_TRUE@	mkdir -p "$(win32_lua_destdir)/http/js"
@BUILD_LUA_TRUE@	mkdir -p "$(win32_lua_destdir)/http/dialogs"
@BUILD_LUA_TRUE@	cp $(srcdir)/share/lua/http/*.html $(win32_lua_destdir)/http/
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/http/*.html
@BUILD_LUA_TRUE@	cp $(srcdir)/share/lua/http/.hosts $(win32_lua_destdir)/http/
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/http/.hosts
@BUILD_LUA_TRUE@	cp $(srcdir)/share/lua/http/*.css $(win32_lua_destdir)/http/
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/http/*.css
@BUILD_LUA_TRUE@	cp $(srcdir)/share/lua/http/js/*.js $(win32_lua_destdir)/http/js/
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/http/js/*.js
@BUILD_LUA_TRUE@	cp $(srcdir)/share/lua/http/*.lua $(win32_lua_destdir)/http/
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/http/*.lua
@BUILD_LUA_TRUE@	cp $(srcdir)/share/lua/http/dialogs/* $(win32_lua_destdir)/http/dialogs/
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/http/dialogs/*
@BUILD_LUA_TRUE@	cp $(srcdir)/share/lua/http/dialogs/.hosts $(win32_lua_destdir)/http/dialogs/
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/http/dialogs/.hosts
@BUILD_LUA_TRUE@	cp $(srcdir)/share/lua/http/*.ico $(win32_lua_destdir)/http/
@BUILD_LUA_TRUE@	cp $(srcdir)/share/lua/http/images/*.png $(win32_lua_destdir)/http/images/
@BUILD_LUA_TRUE@	cp $(srcdir)/share/lua/http/requests/*.xml $(win32_lua_destdir)/http/requests/
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/http/requests/*.xml
@BUILD_LUA_TRUE@	cp $(srcdir)/share/lua/http/requests/readme $(win32_lua_destdir)/http/requests/readme.txt
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/http/requests/readme.txt

#Lua Scripts
@BUILD_LUA_TRUE@	$(INSTALL) -d $(win32_lua_destdir)
@BUILD_LUA_TRUE@	for i in $(srcdir)/share/lua/*.* ; do \
@BUILD_LUA_TRUE@	  $(INSTALL) -m 644 -- "$${i}" $(win32_lua_destdir)/`basename $${i}` ; \
@BUILD_LUA_TRUE@	done
@BUILD_LUA_TRUE@	$(INSTALL) -d $(win32_lua_destdir)/modules
@BUILD_LUA_TRUE@	for i in $(srcdir)/share/lua/modules/*.* ; do \
@BUILD_LUA_TRUE@	  $(INSTALL) -m 644 -- "$${i}" $(win32_lua_destdir)/modules/`basename $${i}` ; \
@BUILD_LUA_TRUE@	done
@BUILD_LUA_TRUE@	$(INSTALL) -d $(win32_lua_destdir)/extensions
@BUILD_LUA_TRUE@	for i in $(srcdir)/share/lua/extensions/*.* ; do \
@BUILD_LUA_TRUE@	  $(INSTALL) -m 644 -- "$${i}" $(win32_lua_destdir)/extensions/`basename $${i}` ; \
@BUILD_LUA_TRUE@	done
@BUILD_LUA_TRUE@	$(INSTALL) -d $(win32_lua_destdir)/intf
@BUILD_LUA_TRUE@	for i in $(srcdir)/share/lua/intf/*.* ; do \
@BUILD_LUA_TRUE@	  $(INSTALL) -m 644 -- "$${i}" $(win32_lua_destdir)/intf/`basename $${i}` ; \
@BUILD_LUA_TRUE@	done
@BUILD_LUA_TRUE@	$(INSTALL) -d $(win32_lua_destdir)/intf/modules
@BUILD_LUA_TRUE@	for i in $(srcdir)/share/lua/intf/modules/*.* ; do \
@BUILD_LUA_TRUE@	  $(INSTALL) -m 644 -- "$${i}" $(win32_lua_destdir)/intf/modules/`basename $${i}` ; \
@BUILD_LUA_TRUE@	done
@BUILD_LUA_TRUE@	$(INSTALL) -d $(win32_lua_destdir)/meta/art
@BUILD_LUA_TRUE@	for i in $(srcdir)/share/lua/meta/art/*.* ; do \
@BUILD_LUA_TRUE@	  $(INSTALL) -m 644 -- "$${i}" $(win32_lua_destdir)/meta/art/`basename $${i}` ; \
@BUILD_LUA_TRUE@	done
@BUILD_LUA_TRUE@	$(INSTALL) -d $(win32_lua_destdir)/meta/fetcher
@BUILD_LUA_TRUE@	for i in $(srcdir)/share/lua/meta/fetcher/*.* ; do \
@BUILD_LUA_TRUE@	  $(INSTALL) -m 644 -- "$${i}" $(win32_lua_destdir)/meta/fetcher/`basename $${i}` ; \
@BUILD_LUA_TRUE@	done
@BUILD_LUA_TRUE@	$(INSTALL) -d $(win32_lua_destdir)/meta/reader
@BUILD_LUA_TRUE@	for i in $(srcdir)/share/lua/meta/reader/*.* ; do \
@BUILD_LUA_TRUE@	  $(INSTALL) -m 644 -- "$${i}" $(win32_lua_destdir)/meta/reader/`basename $${i}` ; \
@BUILD_LUA_TRUE@	done
@BUILD_LUA_TRUE@	$(INSTALL) -d $(win32_lua_destdir)/playlist
@BUILD_LUA_TRUE@	for i in $(srcdir)/share/lua/playlist/*.* ; do \
@BUILD_LUA_TRUE@	  $(INSTALL) -m 644 -- "$${i}" $(win32_lua_destdir)/playlist/`basename $${i}` ; \
@BUILD_LUA_TRUE@	done
@BUILD_LUA_TRUE@	$(INSTALL) -d $(win32_lua_destdir)/sd
@BUILD_LUA_TRUE@	for i in $(srcdir)/share/lua/sd/*.* ; do \
@BUILD_LUA_TRUE@	  $(INSTALL) -m 644 -- "$${i}" $(win32_lua_destdir)/sd/`basename $${i}` ; \
@BUILD_LUA_TRUE@	done

@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/README.txt
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/extensions/README.txt
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/intf/README.txt
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/meta/art/README.txt
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/meta/fetcher/README.txt
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/meta/reader/README.txt
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/playlist/README.txt
@BUILD_LUA_TRUE@	$(U2D) $(win32_lua_destdir)/sd/README.txt

# Copy the http files
@BUILD_HTTPD_TRUE@	mkdir -p "$(win32_http_destdir)/images"
@BUILD_HTTPD_TRUE@	mkdir -p "$(win32_http_destdir)/requests"
@BUILD_HTTPD_TRUE@	mkdir -p "$(win32_http_destdir)/js"
@BUILD_HTTPD_TRUE@	mkdir -p "$(win32_http_destdir)/dialogs"
@BUILD_HTTPD_TRUE@	cp $(srcdir)/share/http/*.html $(win32_http_destdir)/
@BUILD_HTTPD_TRUE@	$(U2D) $(win32_http_destdir)/*.html
@BUILD_HTTPD_TRUE@	cp $(srcdir)/share/http/.hosts $(win32_http_destdir)/
@BUILD_HTTPD_TRUE@	$(U2D) $(win32_http_destdir)/.hosts
@BUILD_HTTPD_TRUE@	cp $(srcdir)/share/http/*.css $(win32_http_destdir)/
@BUILD_HTTPD_TRUE@	$(U2D) $(win32_http_destdir)/*.css
@BUILD_HTTPD_TRUE@	cp $(srcdir)/share/http/js/*.js $(win32_http_destdir)/js/
@BUILD_HTTPD_TRUE@	$(U2D) $(win32_http_destdir)/js/*.js
@BUILD_HTTPD_TRUE@	cp $(srcdir)/share/http/dialogs/* $(win32_http_destdir)/dialogs/
@BUILD_HTTPD_TRUE@	$(U2D) $(win32_http_destdir)/dialogs/*
@BUILD_HTTPD_TRUE@	cp $(srcdir)/share/http/dialogs/.hosts $(win32_http_destdir)/dialogs/
@BUILD_HTTPD_TRUE@	$(U2D) $(win32_http_destdir)/dialogs/.hosts
@BUILD_HTTPD_TRUE@	cp $(srcdir)/share/http/*.ico $(win32_http_destdir)/
@BUILD_HTTPD_TRUE@	cp $(srcdir)/share/http/images/*.png $(win32_http_destdir)/images/
@BUILD_HTTPD_TRUE@	cp $(srcdir)/share/http/requests/*.xml $(win32_http_destdir)/requests/
@BUILD_HTTPD_TRUE@	$(U2D) $(win32_http_destdir)/requests/*.xml
@BUILD_HTTPD_TRUE@	cp $(srcdir)/share/http/requests/readme $(win32_http_destdir)/requests/readme.txt
@BUILD_HTTPD_TRUE@	$(U2D) $(win32_http_destdir)/requests/readme.txt

# Skins
@BUILD_SKINS_TRUE@	mkdir -p $(win32_destdir)/skins/fonts
@BUILD_SKINS_TRUE@	for i in $(srcdir)/share/skins2/fonts/*.*; do \
@BUILD_SKINS_TRUE@	  cp -- "$$i" $(win32_destdir)/skins/fonts/ || true ; \
@BUILD_SKINS_TRUE@	done
@BUILD_SKINS_TRUE@	for i in $(top_builddir)/share/skins2/*.*; do \
@BUILD_SKINS_TRUE@	  cp -- "$$i" $(win32_destdir)/skins/ || true ; \
@BUILD_SKINS_TRUE@	done
@BUILD_SKINS_TRUE@	cp -- $(srcdir)/share/skins2/skin.catalog $(win32_destdir)/skins/ || true ;
@BUILD_SKINS_TRUE@	cp -- $(srcdir)/share/skins2/skin.dtd $(win32_destdir)/skins/ || true ;

#OSD Menu
@BUILD_OSDMENU_TRUE@	mkdir -p "$(win32_destdir)/osdmenu"
@BUILD_OSDMENU_TRUE@	cp $(srcdir)/share/osdmenu/*.* "$(win32_destdir)/osdmenu"
@BUILD_OSDMENU_TRUE@	for dir in default default/selected default/selection default/volume ;do \
@BUILD_OSDMENU_TRUE@		mkdir -p "$(win32_destdir)/osdmenu/$$dir"; \
@BUILD_OSDMENU_TRUE@		for file in $(srcdir)/share/osdmenu/$${dir}/*.png;do \
@BUILD_OSDMENU_TRUE@			 cp -- "$$file" "$(win32_destdir)/osdmenu/$$dir"; \
@BUILD_OSDMENU_TRUE@		done; \
@BUILD_OSDMENU_TRUE@	done
@BUILD_OSDMENU_TRUE@	$(U2D) $(win32_destdir)/osdmenu/*.cfg;
@BUILD_OSDMENU_TRUE@	for file in $(win32_destdir)/osdmenu/*.cfg; do \
@BUILD_OSDMENU_TRUE@		sed 's%share/osdmenu%osdmenu%g' "$$file" > "$$file.tmp" || exit $$? ; \
@BUILD_OSDMENU_TRUE@		sed 's%/%\\%g' "$$file.tmp" > "$$file" || exit$$? ; \
@BUILD_OSDMENU_TRUE@		rm -f -- "$$file.tmp"; \
@BUILD_OSDMENU_TRUE@	done

# SDK
	mkdir -p "$(win32_destdir)/sdk.tmp"
	mkdir -p "$(win32_destdir)/sdk"
	d=$$(pwd) && \
	cd src && \
	make install DESTDIR="$$d/vlc-$(VERSION)/sdk.tmp"
	cd vlc-$(VERSION) && mv sdk.tmp/$(prefix)/* sdk/
	find vlc-$(VERSION)/sdk.tmp -type d | sort -r | xargs rmdir
	rm -Rf vlc-$(VERSION)/sdk/bin

# Strip DLLs
package-win-common-strip: package-win32-base-debug
	for i in "" $(win32_destdir)/*$(LIBEXT) \
	            $(win32_destdir)/*$(EXEEXT) \
	            $(win32_destdir)/activex/*$(LIBEXT) \
	            $(win32_destdir)/mozilla/*$(LIBEXT) \
	            $(win32_destdir)/plugins/*$(LIBEXT) \
	; do \
	  if test -n "$$i" ; then \
	    $(OBJCOPY) --only-keep-debug "$$i" "$$i.dbg"; \
	    $(OBJCOPY) --strip-all "$$i" ; \
	    $(OBJCOPY) --add-gnu-debuglink="$$i.dbg" "$$i" ; \
	    mv "$$i.dbg" "$(win32_debugdir)"; \
	  fi ; \
	done

package-win32-base: package-win-common-strip

package-win32-base-exe: package-win32-base
# Create package
	rm -Rf $(win32_destdir)/sdk
	if makensis -VERSION >/dev/null 2>&1; then \
	    MAKENSIS="makensis"; \
	elif [ -x "/cygdrive/c/Program Files/NSIS/makensis" ]; then \
	    MAKENSIS="/cygdrive/c/Program\ Files/NSIS/makensis"; \
	elif [ -x "$(PROGRAMFILES)/NSIS/makensis" ]; then \
	    MAKENSIS="$(PROGRAMFILES)/NSIS/makensis"; \
	elif wine --version >/dev/null 2>&1; then \
	    MAKENSIS="wine C:/Program\ Files/NSIS/makensis.exe"; \
	else \
	    echo 'Error: cannot locate makensis tool'; exit 1; \
	fi; \
	eval "$$MAKENSIS $(win32_destdir)/spad.nsi"; \
	eval "$$MAKENSIS $(win32_destdir)/vlc.win32.nsi"

package-win32-base-zip: package-win32-base
# Create package 
	rm -f -- vlc-$(VERSION)-win32.zip
	zip -r -9 vlc-$(VERSION)-win32.zip vlc-$(VERSION)

package-win32-base-debug-zip: package-win32-base-debug
# Create package
	rm -f -- vlc-$(VERSION)-win32-debug.zip
	zip -r -9 vlc-$(VERSION)-win32-debug.zip vlc-$(VERSION)

package-win32-base-7zip: package-win32-base
# Create package 
	7z a -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on vlc-$(VERSION)-win32.7z vlc-$(VERSION)

package-win32-base-debug-7zip: package-win32-base-debug
# Create package
	7z a -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on vlc-$(VERSION)-win32-debug.7z vlc-$(VERSION)

package-win32-cleanup:
	rm -Rf $(win32_destdir)
	rm -Rf $(win32_debugdir)

package-win32-exe: package-win32-base package-win32-base-exe package-win32-cleanup

package-win32-zip: package-win32-base-zip package-win32-cleanup

package-win32-debug-zip: package-win32-base-debug-zip package-win32-cleanup

package-win32-7zip: package-win32-base-7zip package-win32-cleanup

package-win32-debug-7zip: package-win32-base-debug-7zip package-win32-cleanup

package-win32-no-clean: package-win32-base-zip package-win32-base-7zip package-win32-base-exe 

package-win32: package-win32-no-clean package-win32-cleanup

package-win32-debug: package-win32-base-debug-zip package-win32-base-debug-7zip package-win32-cleanup

#######
# WinCE
#######
package-wince-base: package-win-common-strip

package-wince-base-zip: package-wince-base
# Create package 
	rm -f -- vlc-$(VERSION)-wince.zip
	zip -r -9 vlc-$(VERSION)-wince.zip vlc-$(VERSION)

package-wince: package-wince-base-zip package-win32-cleanup

#####################################################################
#####################################################################
package-beos:
# Check that tmp isn't in the way
	@if test -e $(srcdir)/tmp; then \
	  echo "Error: please remove $(srcdir)/tmp, it is in the way"; \
	  false ; \
	else \
	  echo "OK." ; mkdir $(srcdir)/tmp ; \
	fi

# Copy relevant files
	mkdir -p $(srcdir)/tmp/vlc
	cd $(srcdir) && cp -R vlc-bundle/* AUTHORS COPYING ChangeLog README \
	  THANKS NEWS tmp/vlc/

# Create debug package
	xres -o $(srcdir)/tmp/vlc/vlc $(srcdir)/share/vlc_beos.rsrc
	find $(srcdir)/tmp/vlc -exec mimeset -f {} \;
	mv $(srcdir)/tmp/vlc $(srcdir)/tmp/vlc-$(VERSION)
	(cd $(srcdir)/tmp && zip -9 -r vlc-$(VERSION)-BeOS-debug.zip vlc-$(VERSION) )
	mv $(srcdir)/tmp/vlc-$(VERSION)-BeOS-debug.zip $(srcdir)/
	mv $(srcdir)/tmp/vlc-$(VERSION) $(srcdir)/tmp/vlc

# Create normal package
	$(STRIP) --strip-debug --strip-unneeded $(srcdir)/tmp/vlc/vlc
	find $(srcdir)/tmp/vlc -name 'lib*.so' -exec $(STRIP) \
	  --strip-debug --strip-unneeded "{}" \;
	xres -o $(srcdir)/tmp/vlc/vlc $(srcdir)/share/vlc_beos.rsrc
	find $(srcdir)/tmp/vlc -exec mimeset -f {} \;
	mv $(srcdir)/tmp/vlc $(srcdir)/tmp/vlc-$(VERSION)
	(cd $(srcdir)/tmp &&  zip -9 -r vlc-$(VERSION)-BeOS.zip vlc-$(VERSION) )
	mv $(srcdir)/tmp/vlc-$(VERSION)-BeOS.zip $(srcdir)/

# Clean up
	rm -Rf $(srcdir)/tmp

#########################################################################
#########################################################################
package-macosx: VLC-release.app ChangeLog
# Check that the temporary location isn't in the way
	@if test -e "$(top_builddir)/vlc-$(VERSION)/"; then \
	  rm -Rf "$(top_builddir)/vlc-$(VERSION)/" ; \
	fi

	echo "Create package directory: vlc-$(VERSION)/";
	mkdir -p "$(top_builddir)/vlc-$(VERSION)/";

# Copy relevant files 
	@if test -e "$(top_builddir)/VLC-release.app/"; then \
	  cp -R "$(top_builddir)/VLC-release.app" "$(top_builddir)/vlc-$(VERSION)/VLC.app"; \
	else \
	  cp -R "$(top_builddir)/VLC.app" "$(top_builddir)/vlc-$(VERSION)/VLC.app"; \
	fi
	mkdir -p $(top_builddir)/vlc-$(VERSION)/Goodies/ && \
          mkdir -p $(top_builddir)/vlc-$(VERSION)/.background/ && \
          cp $(srcdir)/AUTHORS $(srcdir)/COPYING $(srcdir)/README $(srcdir)/THANKS $(srcdir)/NEWS $(top_builddir)/vlc-$(VERSION)/Goodies/ && \
          cp -R  $(srcdir)/extras/package/macosx/Delete_Preferences.app $(top_builddir)/vlc-$(VERSION)/Goodies/Delete\ VLC\ Preferences.app && \
	  cp $(srcdir)/extras/package/macosx/README.MacOSX.rtf $(top_builddir)/vlc-$(VERSION)/Read\ Me.rtf && \
	  cp $(srcdir)/extras/package/macosx/Resources/about_bg.png $(top_builddir)/vlc-$(VERSION)/.background/background.png
	cp -L $(top_builddir)/ChangeLog $(top_builddir)/vlc-$(VERSION)/Goodies/

# Place a link to the application folder
	ln -s /Applications $(top_builddir)/vlc-$(VERSION)/Applications

# Create disk image (temporarily taken from the 0.8.6-bugfix branch to provide reliable NBs)
	echo "Creating disk image"
	rm -f "$(top_builddir)/vlc-$(VERSION).dmg"
	hdiutil create -verbose -srcfolder "$(top_builddir)/vlc-$(VERSION)" \
	  "$(top_builddir)/vlc-$(VERSION).dmg" -scrub
	echo "Disk image creation completed:"
	ls -la "$(top_builddir)/vlc-$(VERSION).dmg" ; echo

# Create disk image 
#	echo "Creating disk image"
#	rm -f "$(top_builddir)/vlc-$(VERSION).dmg"
#	hdiutil create -verbose -srcfolder "$(top_builddir)/vlc-$(VERSION)" \
#	  "$(top_builddir)/vlc-$(VERSION).dmg" -format UDRW \
#	  -scrub -imagekey zlib-level=9 -attach

# Make sure the root window of the dmg will pop up when the dmg is mounted.
# Note: We dont mount in /Volumes to be sure we won't collide with an other
# finder mounted dmg with the same name.
#	echo "Make sure the root window of the dmg will pop up when the dmg is mounted"
#	mkdir -p $(top_builddir)/vlcmnt
#	hdiutil attach -nokernel -readwrite -noverify -noautoopen -private "$(top_builddir)/vlc-$(VERSION).dmg" -mountpoint "$(top_builddir)/vlcmnt/vlc-$(VERSION)"
#	bless --folder "$(top_builddir)/vlcmnt/vlc-$(VERSION)/" --openfolder "$(top_builddir)/vlcmnt/vlc-$(VERSION)"
#	sleep 1 # Make sure operation completes
#	cd "$(srcdir)"

# Unmount the image now
#	hdiutil detach "$(top_builddir)/vlcmnt/vlc-$(VERSION)"
#	rm -R $(top_builddir)/vlcmnt

# Make sure the image is not writable
# Note: We can't directly create a read only dmg as we do the bless stuff
	echo "Make the disk image read-only"
	mv "$(top_builddir)/vlc-$(VERSION).dmg" "$(top_builddir)/vlc-$(VERSION)-rw.dmg"
	hdiutil convert "$(top_builddir)/vlc-$(VERSION)-rw.dmg" -format UDBZ -o "$(top_builddir)/vlc-$(VERSION).dmg"
	rm "$(top_builddir)/vlc-$(VERSION)-rw.dmg"

# We are done
	echo "Disk image creation completed:"
	ls -la "$(top_builddir)/vlc-$(VERSION).dmg" ; echo

# Clean up
	rm -Rf "$(top_builddir)/vlc-$(VERSION)"

package-macosx-zip: VLC-release.app
	rm -Rf $(top_builddir)/vlc-$(VERSION)
	mkdir -p $(top_builddir)/vlc-$(VERSION)
	cp -R $(top_builddir)/VLC-release.app $(top_builddir)/vlc-$(VERSION)/VLC.app
	mkdir -p $(top_builddir)/vlc-$(VERSION)/Goodies
	for i in AUTHORS COPYING ChangeLog README THANKS NEWS; do \
	  cp $(srcdir)/$$i $(top_builddir)/vlc-$(VERSION)/Goodies; \
	done
	cp -R  $(srcdir)/extras/package/macosx/Delete_Preferences.app \
	     $(top_builddir)/vlc-$(VERSION)/Goodies
	cp $(srcdir)/extras/package/macosx/README.MacOSX.rtf \
	   $(top_builddir)/vlc-$(VERSION)/Read\ Me.rtf
	zip -r -y -9 $(top_builddir)/vlc-$(VERSION).zip $(top_builddir)/vlc-$(VERSION)
	rm -Rf $(top_builddir)/vlc-$(VERSION)

package-macosx-framework-zip:
	rm -Rf $(top_builddir)/vlckit-$(VERSION)
	mkdir -p $(top_builddir)/vlckit-$(VERSION)
	cp -R $(srcdir)/projects/macosx/framework/build/Debug/VLCKit.framework \
	  $(top_builddir)/vlckit-$(VERSION)/VLCKit.framework
	mkdir -p $(top_builddir)/vlc-$(VERSION)/Goodies
	for i in AUTHORS COPYING ChangeLog README THANKS NEWS; do \
	  cp $(srcdir)/$$i $(top_builddir)/vlckit-$(VERSION)/Goodies; \
	done
	zip -r -y -9 $(top_builddir)/vlckit-$(VERSION).zip $(top_builddir)/vlckit-$(VERSION)
	rm -Rf $(top_builddir)/vlc-$(VERSION)

package-macosx-plugin:
# Create Installer
@BUILD_MOZILLA_TRUE@	rm -rf "$(top_builddir)/macosx-plugin-instdata/"; true
@BUILD_MOZILLA_TRUE@	mkdir -p "$(top_builddir)/macosx-plugin-instdata"
@BUILD_MOZILLA_TRUE@	rm -f "$(top_builddir)/projects/mozilla/VLC Plugin.plugin/Contents/MacOS/modules/libmacosx_plugin.dylib" 
@BUILD_MOZILLA_TRUE@	cp -R "$(top_builddir)/projects/mozilla/VLC Plugin.plugin" "$(top_builddir)/macosx-plugin-instdata"
@BUILD_MOZILLA_TRUE@	rm -rf "$(top_builddir)/VLC Internet Plug-In.pkg"
@BUILD_MOZILLA_TRUE@	export PACKAGEMAKER=
@BUILD_MOZILLA_TRUE@	if test -x /Developer/Tools/packagemaker; then \
@BUILD_MOZILLA_TRUE@	   export PACKAGEMAKER=/Developer/Tools/packagemaker; \
@BUILD_MOZILLA_TRUE@	fi; \
@BUILD_MOZILLA_TRUE@	if test -x /Developer/Applications/Utilities/PackageMaker.app/Contents/MacOS/PackageMaker; then \
@BUILD_MOZILLA_TRUE@	   export PACKAGEMAKER=/Developer/Applications/Utilities/PackageMaker.app/Contents/MacOS/PackageMaker; \
@BUILD_MOZILLA_TRUE@	fi; \
@BUILD_MOZILLA_TRUE@	$${PACKAGEMAKER} -build -ds -p "$(top_builddir)/VLC Internet Plug-In.pkg" \
@BUILD_MOZILLA_TRUE@	-f "$(top_builddir)/macosx-plugin-instdata" \
@BUILD_MOZILLA_TRUE@	-i "$(top_builddir)/extras/package/macosx/plugin/InstallerInfo.plist" \
@BUILD_MOZILLA_TRUE@	-d "$(top_srcdir)/extras/package/macosx/plugin/InstallerDescription.plist"; true
@BUILD_MOZILLA_TRUE@	rm -rf "$(top_builddir)/macosx-plugin-instdata/"

# Create disk image 
@BUILD_MOZILLA_TRUE@	rm -f "$(top_builddir)/vlc-plugin-$(VERSION).dmg"; true
@BUILD_MOZILLA_TRUE@	rm -rf "$(top_builddir)/vlc-plugin-$(VERSION)/"; true
@BUILD_MOZILLA_TRUE@	mkdir -p "$(top_builddir)/vlc-plugin-$(VERSION)/"
@BUILD_MOZILLA_TRUE@	mv "$(top_builddir)/VLC Internet Plug-In.pkg" "$(top_builddir)/vlc-plugin-$(VERSION)/"
@BUILD_MOZILLA_TRUE@	hdiutil create -srcfolder "$(top_builddir)/vlc-plugin-$(VERSION)" \
@BUILD_MOZILLA_TRUE@	  "$(top_builddir)/vlc-plugin-$(VERSION).dmg" -format UDBZ \
@BUILD_MOZILLA_TRUE@	  -scrub -imagekey zlib-level=9
@BUILD_MOZILLA_TRUE@	echo "Disk image creation completed:"
@BUILD_MOZILLA_TRUE@	rm -rf "$(top_builddir)/vlc-plugin-$(VERSION)"

package-macosx-xpi:
@BUILD_MOZILLA_TRUE@	mkdir -p "$(top_builddir)/macosx-xpi/plugins"
@BUILD_MOZILLA_TRUE@	cp $(top_builddir)/projects/mozilla/install.rdf \
@BUILD_MOZILLA_TRUE@		"$(top_builddir)/macosx-xpi/"
@BUILD_MOZILLA_TRUE@	cp -R "$(top_builddir)/projects/mozilla/VLC Plugin.plugin" \
@BUILD_MOZILLA_TRUE@		"$(top_builddir)/macosx-xpi/plugins"
@BUILD_MOZILLA_TRUE@	cd "$(top_builddir)/macosx-xpi" && zip -r vlc-$(VERSION).xpi install.rdf plugins

package-translations:
	@if test -e "$(srcdir)/vlc-translations-$(VERSION)"; then \
	  echo "Error: please remove $(srcdir)/vlc-translations-$(VERSION), it is in the way"; \
	  false; \
	else \
	  echo "OK."; mkdir -p "$(srcdir)/vlc-translations-$(VERSION)"; \
	fi
# Copy translations
	cat $(top_srcdir)/po/LINGUAS | while read i; do \
	  cp "$(srcdir)/po/$${i}.po" \
	    "$(srcdir)/vlc-translations-$(VERSION)/$${i}.po" \
	    || true ; \
	done
	cp "$(srcdir)/doc/translations.txt" \
	  "$(srcdir)/vlc-translations-$(VERSION)/README.txt"

	echo "#!/bin/sh" >>"$(srcdir)/vlc-translations-$(VERSION)/convert.po.sh"
	echo "" >>"$(srcdir)/vlc-translations-$(VERSION)/convert.po.sh"
	echo 'if test $$# != 1; then' >>"$(srcdir)/vlc-translations-$(VERSION)/convert.po.sh"
	echo "	echo \"Usage: convert-po.sh <.po file>\"" >>"$(srcdir)/vlc-translations-$(VERSION)/convert.po.sh"
	echo "	exit 1" >>"$(srcdir)/vlc-translations-$(VERSION)/convert.po.sh"
	echo "fi" >>"$(srcdir)/vlc-translations-$(VERSION)/convert.po.sh"
	echo "" >>"$(srcdir)/vlc-translations-$(VERSION)/convert.po.sh"
	echo 'msgfmt --statistics -o vlc.mo $$1' >>"$(srcdir)/vlc-translations-$(VERSION)/convert.po.sh"

	$(AMTAR) chof - $(srcdir)/vlc-translations-$(VERSION) \
	  | GZIP=$(GZIP_ENV) gzip -c >$(srcdir)/vlc-translations-$(VERSION).tar.gz

###############################################################################
# PO translation files update
###############################################################################
.PHONY: update-po

update-po:
	cd po && $(MAKE) POTFILES vlc.pot update-po

###############################################################################
# Enforce Mac OS X deployment target environment variable
###############################################################################
macosx-sdk: Makefile.in $(HEADERS_include) vlc-config
	export MACOSX_DEPLOYMENT_TARGET=$(MACOSX_DEPLOYMENT_TARGET)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
