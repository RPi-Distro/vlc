INSTALL file for the Windows 2k/XP/Vista/Seven version of the VLC media player


Running VLC
===========

If you are using a binary release from videolan.org or if you have already built
VLC (see below), just run 'vlc.exe'.

You can also run VLC from a dos command box, in which case you'll be able
to use the command line arguments. You can obtain a list of these command
line arguments by typing 'vlc --help' or 'vlc --help --advanced'.

To store a debug log of the current VLC session, you can use
'vlc -vvv --extraintf=logger'. You will end-up with a vlc-log.txt file in
your current directory.

Additional documentation is available at http://www.videolan.org/doc/ and http://wiki.videolan.org/.


Building VLC from the source code
=================================

If you want to build VLC from sources, you can do it in several ways:

- On GNU/Linux, using the mingw32 cross-compiler.
  This method is preferred over all the others.

- natively on Windows, using MSYS+MINGW (www.mingw.org)
  (MSYS is a minimal build environment to compile Unixish projects under
  windoze. It provides all the common Unix tools like sh, gmake...)
  Please note that the gettext utilities are not included in the default
  MSYS/MINGW packages so you won't be able to build VLC with i18n support.

UNSUPPORTED METHODS
-------------------
- natively on Windows, using cygwin (www.cygwin.com) with or without the
  POSIX emulation layer. This is the preferred way to compile vlc if you want
  to do it on Windows.
  Read http://wiki.videolan.org/Win32CompileCygwinNew to have a complete HOWTO

- natively on Windows, using Microsoft Visual Studio. This will not work.

Getting the right compiler tools
================================

- cross-compiling with mingw32:
You first need to download a GNU/Linux cross-compiler version of mingw32.

For Debian GNU/Linux users, you can use the mingw32, mingw32-binutils and
mingw32-runtime packages.
For Fedora users, you can use mingw-binutils, mingw-gcc-core, mingw-gcc-g++

For MingW and Cygwin, please refer to our Wiki:
- http://wiki.videolan.org/Win32CompileMSYS
- http://wiki.videolan.org/Win32CompileCygwin

Getting the additional libraries
=================================

VLC depends on many other libraries to provide some features like most of the codecs.

Usually, you don't want to compile those by yourself, so use pre-compiled ones.

* We also provide a package with all the libraries already compiled so it is
  actually really easy to compile a full-featured version of vlc (these compiled
  libraries will only work with mingw or cygwin):
  http://download.videolan.org/pub/testing/win32/contrib-200xxxxx-win32-bin-gcc-x.x.x-only.tar.bz2
  (Check out for more recent versions at the same location). 

  All you need to do is extract it in your root directory (the include files
  and libraries will be put in /usr/win32). You can do this with the following
  command: 

    tar xjvf contrib-20060330-win32-bin-gcc-3.4.5-only.tar.bz2 -C /

  Please note the "-C /".

* An automated way of building the contrib libraries is provided in 
  extra/contrib. It will download, configure and build the libraries.
  See the extras/contrib/README for more info.


Configuring the build
=====================

Once you've got all the files you need in place, you need to configure the
build with the `./configure' script.

I'll assume that you are using the pre-compiled 3rd party libraries we are
providing and that they are in /usr/win32.

If you are cross-compiling from Debian, you can use this:

  sh extras/package/win32/configure-mingw.sh


If you are compiling with MSYS/MINGW, then you can use this:

  sh extras/package/win32/configure-msys.sh


If you are using cygwin, you should build VLC without the POSIX emulation layer.
Use this:

  sh extras/package/win32/configure-cygwin.sh

See `./configure --help' for more information.


Actually Compiling the VLC source
=================================

Once configured, to build VLC, just run `make'.

Once the compilation is done, you can either run VLC directly from the source
tree or you can build self-contained VLC packages with the following
'make' rules:

  make package-win32-base
   will create a subdirectory named vlc-x.x.x with all the binaries
   'stripped' (ie. without any debugging symbols).

  make package-win32-zip
   Same as above but will package the directory in a zip file.

  make package-win32
   Same as above but will also create an auto-installer package. You will need
   to have NSIS installed in its default location for this to work.

Well done, now you're ready to use VLC!
=======================================
